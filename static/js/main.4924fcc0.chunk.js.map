{"version":3,"sources":["store.ts","globals.ts","util/util.ts","components/icons/icon.tsx","sw-logic.tsx","components/DetentionsPage.tsx","util/load-calendar-events.ts","components/LoginPage.tsx","components/SelectedEvent.tsx","components/calendar/useDisplayDates.ts","components/calendar/DisplayEventView.tsx","components/calendar/DisplayDateView.tsx","components/calendar/Calendar.tsx","components/calendar/useMonthAndYear.ts","components/CalendarPage.tsx","data/students.ts","components/DutiesPage.tsx","components/ReviewRow.tsx","components/ReviewPage.tsx","components/Content.tsx","util/navigation-store.ts","components/Header.tsx","App.tsx","index.tsx","util/load-reviews.ts"],"names":["NavigationState","Globals","window","document","navigator","onLine","timestamp","Date","now","Util","classes","filter","clazz","Boolean","join","_Icon","symbol","props","width","className","viewBox","fill","d","Icons","IconCalendarDay","IconChevronRight","IconChevronLeft","IconTimes","IconUndo","reloadPage","open","location","href","newSWInstalledCb","registerServiceWorker","serviceWorker","register","then","reg","onupdatefound","installingWorker","installing","activeWorker","active","onstatechange","state","catch","console","error","doAfter","ms","cb","Promise","resolve","setTimeout","ServiceWorkerUpdater","useState","content","setContent","contentDelayed","useCallback","delay","initRefresh","all","useEffect","addEventListener","ProgressColor","createStore","navigation","CALENDAR","events","reviewsData","version","reviews","since","selectedEvent","accessGranted","useSub","Store","parseDate","value","matchWithTime","match","matchWithoutTime","usedMatch","year","Number","month","day","hour","minute","parsed","UTC","getFullYear","getMonth","parseEvent","title","start","end","desc","color","startDate","endDate","undefined","expectedPw","digest","message","a","msgUint8","TextEncoder","encode","crypto","subtle","hashBuffer","hashArray","Array","from","Uint8Array","map","b","toString","padStart","_KEY","grantAccess","set","LoginPage","hideLoginPage","setHideLoginPage","hideLogin","setHideLogin","submitFailed","setSubmitFailed","pw","setPw","key","Persistore","get","access","onSubmit","event","preventDefault","count","onChange","target","type","WEEKDAY_NAMES","_withLeadingZero","num","slice","formatDate","date","getDay","getDate","hours","getUTCHours","minutes","getMinutes","formatTime","clearSelectedEvent","SelectedEvent","onClick","_getDisplayEvent","isStart","isEnd","row","eventClass","titleSpace","Math","min","ceil","_eventClass","showTitle","zIndex","select","backgroundColor","useDisplayDates","useMemo","dates","result","possibleStartIdx","findIndex","possibleEndIdx","endIdx","length","startIdx","eventsForDate","e","i","calculateEvents","offsetLeft","_","index","next","push","offsetRight","concat","calculateDates","DisplayEventView","style","DisplayDateView","MONTH_NAMES","_NOW","NOW","Calendar","monthAndYear","setMonthAndYear","useMonthAndYear","prevMonth","nextMonth","weekday","CalendarPage","Students","split","mondaysCount","floor","Duties","DutyImages","DutiesAndStudents","duty","studentIndex","pos","base","imageName","image","alt","students","Duty","src","student","DutiesPage","ReviewRow","review","name","crowns","warnings","evils","necessary","rewards","ReviewPage","role","aria-label","calculateProgressColor","GOOD","WARN","BAD","calculateWidth","calculateWidthPercent","DETENTIONS_DUMMY_DATA","detentions","finished","DetentionsPage","Content","DUTIES","REVIEW","DETENTIONS","current","Object","values","find","n","_get","NavigationStore","_set","NavigationButtons","label","Header","buttons","button","btn","App","root","getElementById","ReactDOM","render","fetch","headers","pragma","r","json","parsedEvents","parsedVersion","parsedSince"],"mappings":"q6JAwBYA,E,gCCxBCC,EAAU,CACnBC,OAAO,SAAD,mGAAC,EAAC,kBAAMA,UACdC,SAAS,SAAD,mGAAC,EAAC,kBAAMA,YAChBC,UAAU,SAAD,mGAAC,EAAC,kBAAWA,aACtBC,OAAQ,mBAAiB,WAAYJ,EAAQG,cAAgBH,EAAQG,YAAYC,QACjFC,UAAW,kBAAMC,KAAKC,Q,6BCKbC,EAVM,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAA+BA,EAAQC,QAAO,SAACC,GAAD,OAAoBC,QAAQD,MAAQE,KAAK,MCMpGC,EAAQ,SAACC,GAAD,IAA6BC,EAA7B,uDAAgD,GAAIC,EAApD,uDAAoE,IAApE,OACV,yBAAKC,UAAWF,EAAME,UAAYF,EAAME,UAAY,QAAU,OAAQC,QAAO,cAASF,EAAT,SACzE,0BAAMG,KAAK,eAAeC,EAAGC,EAAMP,OAI9BQ,EAAuC,SAACP,GAAD,OAAsBF,EAAM,eAAgBE,EAAO,MAC1FQ,EAAwC,SAACR,GAAD,OAAsBF,EAAM,gBAAiBE,EAAO,MAC5FS,EAAuC,SAACT,GAAD,OAChDF,EAAM,gBAAD,YAAC,eAAsBE,GAAvB,IAA8BE,UAAWV,EAAgB,UAAWQ,EAAME,aAAc,MACpFQ,EAAiC,SAACV,GAAD,OAAsBF,EAAM,QAASE,EAAO,MAC7EW,EAAgC,SAACX,GAAD,OAAsBF,EAAM,OAAQE,ICb3EY,EAAa,WACf5B,EAAQC,SAAS4B,KAAK5B,OAAO6B,SAASC,KAAM,UAG5CC,EAAmB,aAEjBC,EAAwB,kBAC1BjC,EAAQG,YACH+B,cAAcC,SAAS,UACvBC,MAAK,SAACC,GACHA,EAAIC,cAAgB,WAIhB,IAAMC,EAAmBF,EAAIG,WACvBC,EAAeJ,EAAIK,OACzBH,EAAiBI,cAAgB,WAOE,cAA3BJ,EAAiBK,OAAyBH,GAAcT,SAIvEa,OAAM,kBAAM7C,EAAQC,SAAS6C,QAAQC,MAAM,0CAQ9CC,EAAU,SAACC,EAAYC,GAAb,OACZ,IAAIC,SAAQ,SAACC,GAAD,OACRpD,EAAQC,SAASoD,YAAW,WACxBH,IACAE,MACDH,OAGEK,EAAuB,WAAO,IAAD,EACRC,qBADQ,mBAC/BC,EAD+B,KACtBC,EADsB,KAGhCC,EAAiBC,uBACnB,SAACC,EAAeJ,GAAhB,OAAsDR,EAAQY,GAAO,kBAAMH,EAAWD,QACtF,IAGEK,EAAcF,uBAChB,kBACIR,QAAQW,IAAI,CACRJ,EAAe,EAAG,mBAClBA,EAAe,IAAM,mBACrBA,EAAe,KAAM,oBACrBA,EAAe,KAAM,qBACrBA,EAAe,KAAM,sBACrBA,EAAe,KAAM,kBAAC/B,EAAD,OACrBqB,EAAQ,KAAMpB,OAEtB,IAQJ,OALAmC,qBAAU,WACN/B,EAAmB6B,EAnCnB,kBAAmB1D,WAAaF,OAAO+D,iBAAiB,OAAQ/B,KAqCjE,IAEEuB,EAGD,yBAAKtC,UAAU,aACX,yBAAKA,UAAU,sBACf,yBAAKA,UAAU,qBAAqBsC,IALvB,M,kBJlDbzD,K,oBAAAA,E,gBAAAA,E,gBAAAA,E,yBAAAA,M,SKrBPkE,E,ELoCmBC,YAAmB,CACvCC,WAAYpE,EAAgBqE,SAC5BC,OAAQ,GACRC,YAAa,CAAEC,QAAS,GAAIC,QAAS,GAAIC,MAAO,IAChDC,cAAe,KACfC,eAAe,I,mBALZC,E,KAAQC,E,KMrCFC,EAAY,SAACC,GACtB,GAAIA,EAAO,CACP,IAAMC,EAAgBD,EAAME,MAAM,gEAC5BC,EAAmBH,EAAME,MAAM,wCAErC,IAAKD,IAAkBE,EAAkB,OAEzC,IAAMC,EAAYH,GAAa,sBAAuBE,GAAvB,CAAyC,EAAG,IAGrEE,EAAOC,OAAOF,EAAU,IACxBG,EAAQD,OAAOF,EAAU,IAAM,EAC/BI,EAAMF,OAAOF,EAAU,IACvBK,EAAOH,OAAOF,EAAU,IACxBM,EAASJ,OAAOF,EAAU,IAE1BO,EAAS,IAAIpF,KAAKA,KAAKqF,IAAIP,EAAME,EAAOC,EAAKC,EAAMC,IAGzD,KAFoBL,IAASM,EAAOE,eAAiBN,IAAUI,EAAOG,YAEpD,OAElB,OAAOH,IAMTI,EAAa,SAAC,GAAqF,IAAnFC,EAAkF,EAAlFA,MAAOC,EAA2E,EAA3EA,MAAOC,EAAoE,EAApEA,IAAKC,EAA+D,EAA/DA,KAAMC,EAAyD,EAAzDA,MACrCC,EAAYtB,EAAUkB,GACtBK,EAAUJ,EAAMnB,EAAUmB,GAAOG,EACvC,OAAOA,GAAaC,EAAU,CAAEN,QAAOC,MAAOI,EAAWH,IAAKI,EAASH,OAAMC,cAAUG,G,8BC1BrFC,EAAa,mEAEbC,EAAM,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACLC,GAAW,IAAIC,aAAcC,OAAOJ,GAD/B,SAEcK,OAAOC,OAAOP,OAAO,UAAWG,GAF9C,cAELK,EAFK,OAGLC,EAAYC,MAAMC,KAAK,IAAIC,WAAWJ,IAHjC,kBAIJC,EAAUI,KAAI,SAACC,GAAD,OAAOA,EAAEC,SAAS,IAAIC,SAAS,EAAG,QAAM3G,KAAK,KAJvD,2CAAH,sDAON4G,EAAOjB,EAAOD,GAGdmB,EAAc,kBAAM7C,EAAM8C,IAAI,CAAEhD,eAAe,KAKxCiD,EAAsB,WAAO,IAAD,EACKrE,oBAAS,GADd,mBAC9BsE,EAD8B,KACfC,EADe,OAEHvE,oBAAS,GAFN,mBAE9BwE,EAF8B,KAEnBC,EAFmB,OAGGzE,mBAAS,GAHZ,mBAG9B0E,EAH8B,KAGhBC,EAHgB,OAIjB3E,mBAAS,IAJQ,mBAI9B4E,EAJ8B,KAI1BC,EAJ0B,KAK/BzD,EAAgBC,GAAO,qBAAGD,iBAEhCZ,qBAAU,WAb4B0D,EAAKrF,MAAK,SAACiG,GAAD,QAAWC,IAAWC,IAAIF,MAc1DjG,MAAK,SAACoG,GACVA,EAAQd,IACPM,GAAa,QAEvB,IAEHjE,qBAAU,WACFY,GAAetB,YAAW,kBAAMyE,GAAiB,KAjBtC,OAkBhB,CAACnD,IAEJ,IAAM8D,EAAW9E,sBAAW,uCACxB,WAAO+E,GAAP,SAAAhC,EAAA,6DACIgC,EAAMC,iBADV,SAEenC,EAAO2B,GAFtB,2BAE+B5B,EAF/B,6CAvBiBkB,EAAKrF,MAAK,SAACiG,GAAD,OAASC,IAAWX,IAAIU,EAAK,WAASjG,KAAKsF,GAuBtE,OAIQQ,EAAgB,GAJxB,wBAMQA,GAAgB,SAACU,GAAD,OAAWA,EAAQ,KAN3C,4CADwB,sDAUxB,CAACT,IAECU,EAAWlF,uBAAY,SAAC+E,GAAD,OAAWN,EAAMM,EAAMI,OAAO/D,SAAQ,IAEnE,OAAI8C,EAAsB,KAGtB,yBAAK3G,UAAWV,EAAgB,QAASmE,GAAiB,gBACtD,yBAAKzD,UAAU,uBACX,uCACC6G,GAAa,yBAAK7G,UAAU,SAAf,aAElB,yBAAKA,UAAU,wBACX,qCACC6G,GACG,yBAAK7G,UAAU,SACX,0BAAMuH,SAAUA,GACZ,2BACIJ,IAAKJ,EACL/G,UAAWV,EAAgByH,GAAgB,SAC3Cc,KAAK,WACLF,SAAUA,EACV9D,MAAOoD,IAEX,gCACI,kBAAC3G,EAAD,YCxE1BwH,EAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAErDC,EAAmB,SAACC,GAAD,OAAkB,IAAMA,GAAKC,OAAO,IAOvDC,EAAa,SAACC,GAAD,gBACZL,EAAcK,EAAKC,UADP,aACqBL,EAAiBI,EAAKE,WAD3C,YACyDN,EACpEI,EAAKxD,WAAa,GAFP,YAGVwD,EAAKzD,eAHK,OALA,SAACyD,GAChB,IAAMG,EAAQH,EAAKI,cACbC,EAAUL,EAAKM,aACrB,OAAOH,GAASE,EAAT,cAA0BF,EAA1B,YAAmCP,EAAiBS,GAApD,QAAqE,GAKlDE,CAAWP,KAEnCQ,EAAqB,kBAAMhF,EAAM8C,IAAI,CAAEjD,cAAe,QAI/CoF,EAAgB,SAAC,GAA2C,IAAzCpF,EAAwC,EAAxCA,cACpBqB,EAA4BrB,EAA5BqB,MAAOC,EAAqBtB,EAArBsB,MAAOC,EAAcvB,EAAduB,IAAKC,EAASxB,EAATwB,KAE3B,OACI,yBAAKhF,UAAU,iBAAiB6I,QAASF,GACrC,yBAAK3I,UAAU,aACX,kBAACQ,EAAD,OAEJ,yBAAKR,UAAU,4BACX,yBAAKA,UAAU,eACX,0BAAMA,UAAU,SAAS6E,GACzB,8BACEC,KAAWC,EACT,oCACI,kBAAC1E,EAAD,MADJ,IACyB6H,EAAWpD,IAGpC,oCACI,yBAAK9E,UAAU,cAAf,WACCkI,EAAWpD,GACZ,6BACA,yBAAK9E,UAAU,cAAf,SACCkI,EAAWnD,IAGnBC,GAAQ,6BACRA,M,QCGf8D,EAAmB,SACrBtB,EACAW,EACAY,EACAC,EACAC,GAEA,IAtBkBC,EAsBZC,EAAaC,KAAKC,IAAID,KAAKE,OAAO9B,EAAMzC,KAAOoD,GArDzC,QAqD6D,EAAIA,EAAKC,UAAY,EAAK,GAC7FpI,EA5BU,SAAC+I,EAAkBC,GACnC,OAAID,EAAgBC,EAAQ,SAAW,QAC3BA,EAAQ,MAAQ,SA0BVO,CAAYR,EAASC,GACjCjJ,EAAK,eAAwB,IAAboJ,EAAX,gBAxBOD,EAwBwClJ,EAvBvC,WAAfkJ,EAAgC,EACZ,WAAfA,EAAgC,GAC7B,KAqBD,gBAAiEC,EAAa,EAAI,GAAM,EAAxF,OACLK,EAAYT,GAA6B,IAAlBZ,EAAKC,SAGlC,MAAO,CAAEvD,MAFK2E,EAAYhC,EAAM3C,WAAQO,EAExBqE,OADDD,EAAY,OAAIpE,EACPsE,OAAQ,kBA7DflG,EA6DiCgE,EA7DA7D,EAAM8C,IAAI,CAAEjD,kBAA9C,IAACA,GA6DyCzD,QAAOC,YAAWiJ,MAAKU,gBAAiBnC,EAAMvC,QAkC/F2E,EAAkB,SAAC1F,EAAcE,EAAejB,GAA9B,OAC3B0G,mBAAQ,kBA/BY,SAACC,EAAe3G,GACpC,IAD+E,EACzE4G,EAAwBD,EAAM3D,KAAI,SAACgC,GAAD,MAAW,CAAEA,OAAMhF,OAAQ,IAAI6C,MAAM,GAAG9F,UAAKkF,OADN,cAE3DjC,GAF2D,yBAEpEqE,EAFoE,QAGnE1C,EAAe0C,EAAf1C,MAAOC,EAAQyC,EAARzC,IACTiF,EAAmBF,EAAMG,WAAU,SAAC9B,GAAD,OAAWrD,GAASqD,EAnErD,OAmEuErD,EAAQqD,KACjF+B,EAAiBJ,EAAMG,WAAU,SAAC9B,GAAD,OAAWpD,GAAOoD,EApEjD,OAoEmEpD,EAAMoD,KAE3EgC,EAASD,EAAiB,GAAKnF,EAAM+E,EAAMA,EAAMM,OAAS,GAAKN,EAAMM,OAAS,EAAIF,EAClFG,EAAWL,EAAmB,GAAKlF,EAAQgF,EAAM,GAAK,EAAIE,EAEhE,GAAIK,GAAY,GAAKF,GAAU,EAAG,CAC9B,IAAMG,EAAgBP,EAAOM,GAAUlH,OACjC8F,EAAMqB,EAAcL,WAAU,SAACM,GAAD,YAAanF,IAANmF,KAC3C,GAAItB,GAAO,EAAG,CACVqB,EAAcrB,GAAOH,EACjBtB,EACAsC,EAAMO,GACNA,IAAaL,EACbK,IAAaH,EACbjB,GAEJ,IAAK,IAAIuB,EAAIH,EAAW,EAAGG,GAAKL,EAAQK,IACpCT,EAAOS,GAAGrH,OAAO8F,GAAOH,EAAiBtB,EAAOsC,EAAMU,IAAI,EAAOA,IAAMN,EAAgBjB,MApBvG,2BAA6B,IAFkD,8BA2B/E,OAAOc,EAIOU,CA5FK,SAACvG,EAAcE,GAOlC,IANA,IACMsG,GADe,IAAItL,KAAK8E,EAAME,EAAO,GACVgE,SAAW,GAAK,EAC3C2B,EAAS,IAAI/D,MAAM0E,GACpBxK,UAAKkF,GACLe,KAAI,SAACwE,EAAGC,GAAJ,OAAc,IAAIxL,KAAK8E,EAAME,EAAOwG,EAAQF,EAAa,MAEzDF,EAAI,EAAGA,GAAK,GAAIA,IAAK,CAC1B,IAAMK,EAAO,IAAIzL,KAAK8E,EAAME,EAAOoG,GACnC,GAAIK,EAAKlG,aAAeP,EAGpB,MAFA2F,EAAOe,KAAKD,GAMpB,IAAME,EAAc,EAAIhB,EAAOA,EAAOK,OAAS,GAAGhC,SAClD,OAAO2B,EAAOiB,OACV,IAAIhF,MAAM+E,GAAa7K,UAAKkF,GAAWe,KAAI,SAACwE,EAAGC,GAAJ,OAAc,IAAIxL,KAAK8E,EAAME,EAAQ,EAAGwG,EAAQ,OA0EjEK,CAAe/G,EAAME,GAAQjB,KAAS,CAACe,EAAME,EAAOjB,KC7FzE+H,EAAoD,SAAC,GAAe,IAAb1D,EAAY,EAAZA,MAChE,IAAKA,EAAO,OAAO,KADyD,IAEpE3C,EAAkE2C,EAAlE3C,MAAO4E,EAA2DjC,EAA3DiC,OAAQ1J,EAAmDyH,EAAnDzH,MAAOC,EAA4CwH,EAA5CxH,UAAWiJ,EAAiCzB,EAAjCyB,IAAKS,EAA4BlC,EAA5BkC,OAAQC,EAAoBnC,EAApBmC,gBACtD,OACI,yBACId,QAASa,EACTyB,MAAO,CAAEpL,QAAO0J,SAAQE,mBACxB3J,UAAWV,EAAgB,QAAS,SAAW2J,EAAKjJ,IACnD6E,GAAS,8CCPTuG,EAAkD,SAAC,GAAD,QAAGjD,KAAQA,EAAX,EAAWA,KAAMhF,EAAjB,EAAiBA,OAAUiB,EAA3B,EAA2BA,MAAO/E,EAAlC,EAAkCA,IAAlC,OAC3D,yBACIW,UAAWV,EACP,OACA6I,EAAKxD,aAAeP,GAAS,YAC5B+D,KAAU9I,GAAO,UACA,IAAlB8I,EAAKC,UAAkB,WAE3B,0BAAMpI,UAAU,SAASmI,EAAKE,WAC7BlF,EAAOgD,KAAI,SAACqB,EAAOoD,GAAR,OACR,kBAAC,EAAD,CAAkBpD,MAAOA,EAAOL,IAAKyD,SCV3CS,EAAc,CAChB,SACA,UACA,UACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAEEvD,EAAgB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAErDwD,GAAO,IAAIlM,KACXmM,GAAM,IAAInM,KAAKkM,GAAK5G,cAAe4G,GAAK3G,WAAY2G,GAAKjD,WAElDmD,GAAkD,SAAC,GAAgB,IAAdrI,EAAa,EAAbA,OAAa,ECtBhD,SAAC9D,GAAuD,IAAD,EAC1CgD,oBAAuB,iBAAO,CAClE+B,MAAO/E,EAAIsF,WACXT,KAAM7E,EAAIqF,kBAHoE,mBAC3E+G,EAD2E,KAC7DC,EAD6D,KAuBlF,MAAO,CAACD,EAjBUhJ,uBACd,kBACIiJ,GAAgB,gBAAGtH,EAAH,EAAGA,MAAOF,EAAV,EAAUA,KAAV,MAAsB,CAClCE,MAAiB,IAAVA,EAAc,GAAKA,EAAQ,EAClCF,KAAgB,IAAVE,EAAcF,EAAO,EAAIA,QAEvC,IAEczB,uBACd,kBACIiJ,GAAgB,gBAAGtH,EAAH,EAAGA,MAAOF,EAAV,EAAUA,KAAV,MAAsB,CAClCE,MAAiB,KAAVA,EAAe,EAAIA,EAAQ,EAClCF,KAAgB,KAAVE,EAAeF,EAAO,EAAIA,QAExC,KDG4CyH,CAAgBJ,IADW,0BAClEnH,EADkE,EAClEA,MAAOF,EAD2D,EAC3DA,KAAQ0H,EADmD,KACxCC,EADwC,KAErE/B,EAAQF,EAAgB1F,EAAME,EAAOjB,GAE3C,OACI,yBAAKnD,UAAU,YACX,yBAAKA,UAAU,SACX,0BAAM6I,QAAS+C,EAAW5L,UAAU,SAChC,kBAAC,EAAD,OAEJ,0BAAMA,UAAU,SACXqL,EAAYjH,GADjB,IAC0BF,GAE1B,0BAAM2E,QAASgD,EAAW7L,UAAU,SAChC,kBAACM,EAAD,QAGR,yBAAKN,UAAU,QACV8H,EAAc3B,KAAI,SAAC2F,GAAD,OACf,yBAAK3E,IAAK2E,EAAS9L,UAAU,WACxB8L,MAGRhC,EAAM3D,KAAI,SAACgC,GAAD,OACP,kBAAC,EAAD,CAAiBA,KAAMA,EAAM/D,MAAOA,EAAO/E,IAAKkM,GAAKpE,KAAMgB,EAAKA,aE7CvE4D,GAAe,WAAO,IAAD,EACIrI,GAAO,kBAAgC,CAAEF,cAAlC,EAAGA,cAA8CL,OAAjD,EAAkBA,WAAnDK,EADsB,EACtBA,cAAeL,EADO,EACPA,OACvB,OACI,yBAAKnD,UAAU,iBACX,uCACA,kBAAC,GAAD,CAAUmD,OAAQA,IACjBK,GAAiB,kBAAC,EAAD,CAAeA,cAAeA,MCX/CwI,GAAW,6JAA6JC,MACjL,KCEEV,GAAMnM,KAAKC,MAkBX6M,GAdoB9C,KAAK+C,QAAQZ,GAAMnM,KAAKqF,IAAI,KAAM,EAAG,IAAM,MAAW,GAAK,GAE7D,CACpBrF,KAAKqF,IAAI,KAAM,EAAG,GAClBrF,KAAKqF,IAAI,KAAM,EAAG,IAClBrF,KAAKqF,IAAI,KAAM,GAAI,IACnBrF,KAAKqF,IAAI,KAAM,GAAI,IACnBrF,KAAKqF,IAAI,KAAM,EAAG,GAClBrF,KAAKqF,IAAI,KAAM,EAAG,GAClBrF,KAAKqF,IAAI,KAAM,EAAG,KAGuBjF,QAAO,SAACL,GAAD,OAAeA,GAAaoM,MAAKnB,OAI/EgC,GAAS,0HAAiHH,MAC5H,KAEEI,GAAa,qDAAqDJ,MAAM,KAKxEK,GAAoBF,GAAOjG,KAAe,SAACoG,EAAM3B,GACnD,IAAM4B,EAAe,SAACC,GAAD,OAHTzE,GAGkC,EAAIkE,GAAe,EAAItB,EA5BvD,GA4B2E6B,EAHhEC,EAGqEV,GAAS5B,QAH3DpC,EAAM0E,EAAQA,GAAQA,EAAvD,IAAC1E,EAAa0E,GAInBC,EAAYN,GAAWzB,GAC7B,MAAO,CACH2B,OACAK,MAAM,IAAD,OAAMD,EAAN,QACLE,IAAKN,EACLO,SAAU,CAACd,GAASQ,EAAa,IAAKR,GAASQ,EAAa,SAI9DO,GAAO,SAAC,GAAD,IAAGR,EAAH,EAAGA,KAAMK,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,IAAKC,EAArB,EAAqBA,SAArB,OACT,yBAAK9M,UAAU,QACX,yBAAKA,UAAU,cAAcuM,GAC7B,yBAAKvM,UAAU,cACX,yBAAKgN,IAAKJ,EAAOC,IAAKA,KAEzBC,EAAS3G,KAAI,SAAC8G,EAASrC,GAAV,OACV,yBAAK5K,UAAU,UAAUmH,IAAKyD,GACzBqC,MAGT,+BAIKC,GAAa,kBACtB,yBAAKlN,UAAU,UACVsM,GAAkBnG,KAAI,SAACoG,EAAM3B,GAAP,OACnB,kBAAC,GAAD,eAAMzD,IAAKyD,GAAW2B,SCvDrBY,GAAY,SAAC,GAAD,QAAGC,OAAUC,EAAb,EAAaA,KAAMC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAAUC,EAArC,EAAqCA,MAAOC,EAA5C,EAA4CA,UAAWC,EAAvD,EAAuDA,QAAvD,OACrB,wBAAI1N,UAAWyN,EAAY,YAASrI,GAChC,4BAAKiI,GACL,4BACKC,EACAI,EAAU,0BAAM1N,UAAU,WAAW0N,GAAkB,MAE5D,4BAAKH,GACL,4BAAKC,GACL,4BAAKC,GAAa,MCVbE,GAAa,WAAO,IAAD,EAGxBjK,GAAO,kBAAsB,CAAEN,YAAxB,EAAGA,gBADVA,YAAeC,EAFS,EAETA,QAASC,EAFA,EAEAA,QAASC,EAFT,EAESA,MAErC,OACI,yBAAKvD,UAAU,WACX,2CACA,2BAAOA,UAAU,cACb,+BACI,4BACI,oCACA,4BACI,0BAAM4N,KAAK,MAAMC,aAAW,UAA5B,iBAIJ,4BACI,0BAAMD,KAAK,MAAMC,aAAW,gBAA5B,iBAIJ,4BACI,0BAAMD,KAAK,MAAMC,aAAW,cAA5B,iBAIJ,4BACI,0BAAMD,KAAK,MAAMC,aAAW,mBAA5B,mBAMZ,+BACKvK,EAAQ6C,KAAI,SAACiH,GAAD,OACT,kBAAC,GAAD,CAAWjG,IAAKiG,EAAOC,KAAMD,OAAQA,SA9BrD,mCAkCkC7J,EAC9B,6BAnCJ,oBAoCsBF,EAClB,4BACI,4BACI,0BAAMuK,KAAK,MAAMC,aAAW,UAA5B,gBAEQ,IAHZ,uBAMA,4BACI,0BAAMD,KAAK,MAAMC,aAAW,gBAA5B,gBAEQ,IAHZ,8BAMA,4BACI,0BAAMD,KAAK,MAAMC,aAAW,cAA5B,gBAEQ,IAHZ,6BAMA,4BACI,0BAAMD,KAAK,MAAMC,aAAW,mBAA5B,gBAEQ,IAHZ,0C,Sb9DX9K,K,aAAAA,E,cAAAA,E,WAAAA,M,KAML,IAAM+K,GAAyB,SAACzE,GAAD,OAC3BA,EAAM,GAAKtG,EAAcgL,KAAO1E,EAAM,GAAKtG,EAAciL,KAAOjL,EAAckL,KAG5EC,GAAiB,SAAC7E,GAAD,OADO,SAACA,GAAD,OAAyBD,KAAKC,IAAI,IAAKA,EAAM,KAC3B8E,CAAsB9E,GAAO,KAEvE+E,GAAwB,CAC1B7K,MAAO,aACPF,QAAS,MACTyJ,SAAU,CACN,CACIO,KAAM,MACNhE,IAAK,GACLgF,WAAY,EACZC,SAAU,GAEd,CACIjB,KAAM,QACNhE,IAAK,GACLgF,WAAY,EACZC,SAAU,GAEd,CACIjB,KAAM,SACNhE,IAAK,GACLgF,WAAY,EACZC,SAAU,GAEd,CACIjB,KAAM,OACNhE,IAAK,EACLgF,WAAY,EACZC,SAAU,KAKTC,GAA2B,kBACpC,yBAAKvO,UAAU,cACX,+CACCoO,GAAsBtB,SAAS3G,KAAI,gBAAGkH,EAAH,EAAGA,KAAMhE,EAAT,EAASA,IAAKgF,EAAd,EAAcA,WAAYC,EAA1B,EAA0BA,SAA1B,OAChC,yBAAKtO,UAAU,YAAYmH,IAAKkG,GAC5B,6BAAMA,GACN,yBAAKrN,UAAU,uBACX,yBACIA,UAAU,6BACVmL,MAAO,CAAEpL,MAAOmO,GAAe7E,GAAMM,gBAAiBmE,GAAuBzE,MAEjF,yBAAKrJ,UAAU,6BAA6BqJ,EAA5C,SAEHgF,EAAa,GACV,yBAAKrO,UAAWV,EAAgB,uBAAwB+O,EAAaC,GAAY,QAC5EA,EADL,MACkBD,OAK9B,8DACkCD,GAAsB7K,MACpD,6BAFJ,oBAGsB6K,GAAsB/K,SAE5C,6CACA,8RcjEKmL,GAAU,WAAO,IAClBvL,EAAeS,GAAO,kBAAqB,CAAET,WAAvB,EAAGA,eAAzBA,WAER,OAAIA,IAAepE,EAAgB4P,OAAe,kBAAC,GAAD,MAC9CxL,IAAepE,EAAgB6P,OAAe,kBAAC,GAAD,MAC9CzL,IAAepE,EAAgB8P,WAAmB,kBAAC,GAAD,MAE/C,kBAAC,GAAD,OCGXhL,EAAM8C,IAAI,CAAExD,WALC,WACT,IAAM2L,EAAUxH,IAAWC,IAVf,cAWZ,OAAOwH,OAAOC,OAAOjQ,GAAiBkQ,MAAK,SAACC,GAAD,OAAOA,IAAMJ,MAAY/P,EAAgBqE,SAGhE+L,KAEjB,IAAMC,GATM,SAACjM,GAAD,OAAiC,kBALvC,SAACA,GACVmE,IAAWX,IAHC,aAGYxD,GACxBU,EAAM8C,IAAI,CAAExD,eAG0CkM,CAAKlM,KCLzDmM,GAAqD,CACvD,CAAEvH,KAAMhJ,EAAgBqE,SAAUmM,MAAO,WACzC,CAAExH,KAAMhJ,EAAgB4P,OAAQY,MAAO,YACvC,CAAExH,KAAMhJ,EAAgB6P,OAAQW,MAAO,UACvC,CAAExH,KAAMhJ,EAAgB8P,WAAYU,MAAO,kBAGlCC,GAAS,WAAO,IACjBrM,EAAeS,GAAO,kBAAqB,CAAET,WAAvB,EAAGA,eAAzBA,WAEFsM,EAAU1F,mBACZ,kBACIuF,GAAkB5P,QAAO,SAACgQ,GAAD,OAAYA,EAAO3H,OAAS5E,KAAYkD,KAAI,SAACsJ,GAAD,OACjE,4BAAQ5G,QAASqG,GAA2BO,EAAI5H,MAAOV,IAAKsI,EAAI5H,MAC3D4H,EAAIJ,YAGjB,CAACpM,IAEL,OACI,4BAAQjD,UAAU,cACd,yBAAKgN,IAAI,YAAYhN,UAAU,WAAW6M,IAAI,SAC9C,yBAAK7M,UAAU,cAAcuP,KCtB5BG,GAAM,WAGf,OAFsBhM,GAAO,qBAAGD,iBAI5B,yBAAKzD,UAAU,OACX,kBAAC,GAAD,MACA,yBAAKA,UAAU,eACX,kBAAC,GAAD,QALe,MCIzB2P,GAAO7Q,EAAQE,WAAW4Q,eAAe,QAC/CC,IAASC,OACL,oCACI,kBAAC,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,OAEJH,IjBiBAI,MAAM,eAAgB,CAAEC,QAAS,CAAE,gBAAiB,WAAYC,OAAQ,cACnE/O,MAAK,SAACgP,GAAD,OAAOA,EAAEC,UACdjP,MAAK,YAAiB,IACbkP,EADY,EAAbjN,OACuBgD,IAAIvB,GAAYpF,OAAOE,SACnDiE,EAAM8C,IAAI,CAAEtD,OAAQiN,OAGvBzO,MAAMC,QAAQC,OkBxCnBkO,MAAM,gBAAiB,CAAEC,QAAS,CAAE,gBAAiB,WAAYC,OAAQ,cACpE/O,MAAK,SAACgP,GAAD,OAAOA,EAAEC,UACdjP,MAAK,YAAkC,IAA/BoC,EAA8B,EAA9BA,QACC+M,EAD6B,EAArBhN,SACmB,8BAC3BiN,EAF6B,EAAZ/M,OAEM,8BAC7BI,EAAM8C,IAAI,CAAErD,YAAa,CAAEC,QAASgN,EAAe/M,UAASC,MAAO+M,QAEtE3O,OAAM,iB","file":"static/js/main.4924fcc0.chunk.js","sourcesContent":["import { createStore } from 'react-use-sub';\n\nexport type CalendarEvent = {\n    title: string;\n    start: Date;\n    end: Date;\n    desc?: string;\n    color?: string;\n};\n\nexport type Review = {\n    name: string;\n    crowns: number;\n    warnings: number;\n    evils: number;\n    necessary?: number;\n    rewards?: number;\n};\nexport type ReviewsData = {\n    reviews: ReadonlyArray<Review>;\n    version: string;\n    since: string;\n};\n\nexport enum NavigationState {\n    CALENDAR = 'calendar',\n    DUTIES = 'duties',\n    REVIEW = 'review',\n    DETENTIONS = 'detentions',\n}\n\ntype State = {\n    navigation: NavigationState;\n    events: CalendarEvent[];\n    reviewsData: ReviewsData;\n    selectedEvent: CalendarEvent | null;\n    accessGranted: boolean;\n};\n\nconst [useSub, Store] = createStore<State>({\n    navigation: NavigationState.CALENDAR,\n    events: [],\n    reviewsData: { version: '', reviews: [], since: '' },\n    selectedEvent: null,\n    accessGranted: false,\n});\n\nexport { useSub, Store };\n","export const Globals = {\n    window: () => window,\n    document: () => document,\n    navigator: (): any => navigator,\n    onLine: (): boolean => !('onLine' in Globals.navigator()) || Globals.navigator().onLine,\n    timestamp: () => Date.now(),\n};\n","const classNames = (...classes: any[]): string => classes.filter((clazz?: string) => Boolean(clazz)).join(' ');\n\nconst array = (num: number): Array<void> => [...Array(num)];\n\nconst nextArray = <T>(before: T[], index: number, value: T): T[] => [\n    ...before.slice(0, index),\n    value,\n    ...before.slice(index + 1),\n];\n\nexport const Util = { array, classNames, nextArray };\n","import React from 'react';\nimport Icons from './icon-path.json';\nimport { Util } from '../../util/util';\n\ntype IconProps = { className?: string };\n\nconst _Icon = (symbol: keyof typeof Icons, props: IconProps = {}, width: number = 512) => (\n    <svg className={props.className ? props.className + ' icon' : 'icon'} viewBox={`0 0 ${width} 512`}>\n        <path fill=\"currentColor\" d={Icons[symbol]} />\n    </svg>\n);\n\nexport const IconCalendarDay: React.FC<IconProps> = (props: IconProps) => _Icon('CALENDAR_DAY', props, 448);\nexport const IconChevronRight: React.FC<IconProps> = (props: IconProps) => _Icon('CHEVRON_RIGHT', props, 320);\nexport const IconChevronLeft: React.FC<IconProps> = (props: IconProps) =>\n    _Icon('CHEVRON_RIGHT', { ...props, className: Util.classNames('reflect', props.className) }, 320);\nexport const IconTimes: React.FC<IconProps> = (props: IconProps) => _Icon('TIMES', props, 352);\nexport const IconUndo: React.FC<IconProps> = (props: IconProps) => _Icon('UNDO', props);\n","import React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { Globals } from './globals';\nimport { IconUndo } from './components/icons/icon';\n\nconst reloadPage = () => {\n    Globals.window().open(window.location.href, '_self');\n};\n\nlet newSWInstalledCb = () => {};\n\nconst registerServiceWorker = () =>\n    Globals.navigator()\n        .serviceWorker.register('/sw.js')\n        .then((reg: any /* ServiceWorkerRegistration */) => {\n            reg.onupdatefound = () => {\n                // reg.installing -> the installing worker, or undefined\n                // reg.waiting -> the waiting worker, or undefined\n                // reg.active -> the active worker, or undefined\n                const installingWorker = reg.installing;\n                const activeWorker = reg.active;\n                installingWorker.onstatechange = () => {\n                    // \"installing\" - the install event has fired, but not yet complete\n                    // \"installed\"  - install complete\n                    // \"activating\" - the activate event has fired, but not yet complete\n                    // \"activated\"  - fully active\n                    // \"redundant\"  - discarded. Either failed install, or it's been\n                    //                replaced by a newer version\n                    if (installingWorker.state === 'installed' && activeWorker) newSWInstalledCb();\n                };\n            };\n        })\n        .catch(() => Globals.window().console.error('service worker registration failed'));\n\nconst initServiceWorker = () => {\n    if (process.env.NODE_ENV !== 'development') {\n        'serviceWorker' in navigator && window.addEventListener('load', registerServiceWorker);\n    }\n};\n\nconst doAfter = (ms: number, cb: () => void): Promise<void> =>\n    new Promise((resolve) =>\n        Globals.window().setTimeout(() => {\n            cb();\n            resolve();\n        }, ms)\n    );\n\nexport const ServiceWorkerUpdater = () => {\n    const [content, setContent] = useState<ReactNode | void>();\n\n    const contentDelayed = useCallback(\n        (delay: number, content: ReactNode): Promise<void> => doAfter(delay, () => setContent(content)),\n        []\n    );\n\n    const initRefresh = useCallback(\n        () =>\n            Promise.all([\n                contentDelayed(0, 'Update gefunden'),\n                contentDelayed(1000, 'Update anwenden'),\n                contentDelayed(1300, 'Update anwenden.'),\n                contentDelayed(1600, 'Update anwenden..'),\n                contentDelayed(1900, 'Update anwenden...'),\n                contentDelayed(2200, <IconUndo />),\n                doAfter(2500, reloadPage),\n            ]),\n        [] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    useEffect(() => {\n        newSWInstalledCb = initRefresh;\n        initServiceWorker();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!content) return null;\n\n    return (\n        <div className=\"sw-update\">\n            <div className=\"sw-update-overlay\" />\n            <div className=\"sw-update-content\">{content}</div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { Util } from '../util/util';\n\nenum ProgressColor {\n    GOOD = 'green',\n    WARN = 'orange',\n    BAD = 'red',\n}\n\nconst calculateProgressColor = (min: number): ProgressColor =>\n    min < 15 ? ProgressColor.GOOD : min < 30 ? ProgressColor.WARN : ProgressColor.BAD;\n\nconst calculateWidthPercent = (min: number): number => Math.min(100, min / 0.45);\nconst calculateWidth = (min: number): string => calculateWidthPercent(min) + '%';\n\nconst DETENTIONS_DUMMY_DATA = {\n    since: '06.08.2020',\n    version: 'N/A',\n    students: [\n        {\n            name: 'Max',\n            min: 22,\n            detentions: 2,\n            finished: 1,\n        },\n        {\n            name: 'Petra',\n            min: 10,\n            detentions: 0,\n            finished: 0,\n        },\n        {\n            name: 'Moritz',\n            min: 44,\n            detentions: 3,\n            finished: 3,\n        },\n        {\n            name: 'Jana',\n            min: 0,\n            detentions: 1,\n            finished: 0,\n        },\n    ],\n};\n\nexport const DetentionsPage: React.FC = () => (\n    <div className=\"detentions\">\n        <h1>Verspätungen</h1>\n        {DETENTIONS_DUMMY_DATA.students.map(({ name, min, detentions, finished }) => (\n            <div className=\"detention\" key={name}>\n                <div>{name}</div>\n                <div className=\"detention__progress\">\n                    <div\n                        className=\"detention__progress--value\"\n                        style={{ width: calculateWidth(min), backgroundColor: calculateProgressColor(min) }}\n                    />\n                    <div className=\"detention__progress--desc\">{min} min</div>\n                </div>\n                {detentions > 0 && (\n                    <div className={Util.classNames('detention__statistic', detentions > finished && 'bad')}>\n                        {finished} / {detentions}\n                    </div>\n                )}\n            </div>\n        ))}\n        <p>\n            Die Liste wird geführt seit: {DETENTIONS_DUMMY_DATA.since}\n            <br />\n            Aktualisiert am: {DETENTIONS_DUMMY_DATA.version}\n        </p>\n        <h3>Erklärung:</h3>\n        <p>\n            Sobald der Balken mit 45 min Verpätungszeit aufgefüllt ist, ist ein Nacharbeiten der Stunde erforderlich.\n            Die Zahlen am Ende der Reihe z.B. 1 / 2 bedeuten, dass 2 mal das Nacharbeiten der Stunde erforderlich war\n            und bereits 1 mal nachgeholt wurde.\n        </p>\n    </div>\n);\n","import { Store, CalendarEvent } from '../store';\n\nexport const parseDate = (value?: any): Date | void => {\n    if (value) {\n        const matchWithTime = value.match(/^([0-9]{2})\\.([0-9]{2})\\.([0-9]{4}) ([0-9]{1,2}):([0-9]{2})$/);\n        const matchWithoutTime = value.match(/^([0-9]{2})\\.([0-9]{2})\\.([0-9]{4})$/);\n\n        if (!matchWithTime && !matchWithoutTime) return;\n\n        const usedMatch = matchWithTime ? matchWithTime : [...matchWithoutTime, 0, 0];\n\n        // extract information\n        const year = Number(usedMatch[3]);\n        const month = Number(usedMatch[2]) - 1;\n        const day = Number(usedMatch[1]);\n        const hour = Number(usedMatch[4]);\n        const minute = Number(usedMatch[5]);\n        // parse it\n        const parsed = new Date(Date.UTC(year, month, day, hour, minute));\n        const dateIsValid = year === parsed.getFullYear() && month === parsed.getMonth();\n\n        if (!dateIsValid) return;\n\n        return parsed; // return valid date\n    }\n};\n\ntype CalendarEventFromJson = { title: string; start: string; end?: string; desc?: string; color?: string };\n\nconst parseEvent = ({ title, start, end, desc, color }: CalendarEventFromJson): CalendarEvent | void => {\n    const startDate = parseDate(start);\n    const endDate = end ? parseDate(end) : startDate;\n    return startDate && endDate ? { title, start: startDate, end: endDate, desc, color } : undefined;\n};\n\nexport const loadCalendarEvents = () =>\n    fetch('/events.json', { headers: { 'cache-control': 'no-cache', pragma: 'no-cache' } })\n        .then((r) => r.json())\n        .then(({ events }) => {\n            const parsedEvents = events.map(parseEvent).filter(Boolean);\n            Store.set({ events: parsedEvents });\n        })\n        // eslint-disable-next-line no-console\n        .catch(console.error);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Util } from '../util/util';\nimport { Persistore } from 'persistore';\nimport { Store, useSub } from '../store';\nimport { IconChevronRight } from './icons/icon';\n\nconst expectedPw = '711c8940d4e7779c789cdfebb099aebc9d8bfc8345703a735a1e1e00714dd8fa';\n\nconst digest = async (message: string) => {\n    const msgUint8 = new TextEncoder().encode(message);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n};\n\nconst _KEY = digest(expectedPw);\n\nconst getAccess = (): Promise<boolean> => _KEY.then((key) => !!Persistore.get(key));\nconst grantAccess = () => Store.set({ accessGranted: true });\nconst saveAccess = () => _KEY.then((key) => Persistore.set(key, 'true')).then(grantAccess);\n\nconst ANIMATION_TIME = 3_000;\n\nexport const LoginPage: React.FC = () => {\n    const [hideLoginPage, setHideLoginPage] = useState(false);\n    const [hideLogin, setHideLogin] = useState(true);\n    const [submitFailed, setSubmitFailed] = useState(0);\n    const [pw, setPw] = useState('');\n    const accessGranted = useSub(({ accessGranted }) => accessGranted);\n\n    useEffect(() => {\n        getAccess().then((access) => {\n            if (access) grantAccess();\n            else setHideLogin(false);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (accessGranted) setTimeout(() => setHideLoginPage(true), ANIMATION_TIME);\n    }, [accessGranted]);\n\n    const onSubmit = useCallback(\n        async (event) => {\n            event.preventDefault();\n            if ((await digest(pw)) === expectedPw) {\n                await saveAccess();\n                setSubmitFailed(0);\n            } else {\n                setSubmitFailed((count) => count + 1);\n            }\n        },\n        [pw]\n    );\n    const onChange = useCallback((event) => setPw(event.target.value), []);\n\n    if (hideLoginPage) return null;\n\n    return (\n        <div className={Util.classNames('login', accessGranted && 'login--open')}>\n            <div className=\"login__welcome-left\">\n                <div>Willko</div>\n                {hideLogin || <div className=\"small\">Password</div>}\n            </div>\n            <div className=\"login__welcome-right\">\n                <div>mmen</div>\n                {hideLogin || (\n                    <div className=\"small\">\n                        <form onSubmit={onSubmit}>\n                            <input\n                                key={submitFailed}\n                                className={Util.classNames(submitFailed && 'error')}\n                                type=\"password\"\n                                onChange={onChange}\n                                value={pw}\n                            />\n                            <button>\n                                <IconChevronRight />\n                            </button>\n                        </form>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport { CalendarEvent, Store } from '../store';\nimport { IconCalendarDay, IconTimes } from './icons/icon';\n\nconst WEEKDAY_NAMES = ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'];\n\nconst _withLeadingZero = (num: number) => ('0' + num).slice(-2);\n\nconst formatTime = (date: Date): string => {\n    const hours = date.getUTCHours();\n    const minutes = date.getMinutes();\n    return hours || minutes ? ` um ${hours}:${_withLeadingZero(minutes)} Uhr` : '';\n};\nconst formatDate = (date: Date) =>\n    `${WEEKDAY_NAMES[date.getDay()]}, ${_withLeadingZero(date.getDate())}.${_withLeadingZero(\n        date.getMonth() + 1\n    )}.${date.getFullYear()}${formatTime(date)}`;\n\nconst clearSelectedEvent = () => Store.set({ selectedEvent: null });\n\nexport type SelectedEventProps = { selectedEvent: CalendarEvent };\n\nexport const SelectedEvent = ({ selectedEvent }: SelectedEventProps) => {\n    const { title, start, end, desc } = selectedEvent;\n\n    return (\n        <div className=\"selected-event\" onClick={clearSelectedEvent}>\n            <div className=\"close-btn\">\n                <IconTimes />\n            </div>\n            <div className=\"selected-event-container\">\n                <div className=\"description\">\n                    <span className=\"title\">{title}</span>\n                    <hr />\n                    {+start === +end ? (\n                        <>\n                            <IconCalendarDay /> {formatDate(start)}\n                        </>\n                    ) : (\n                        <>\n                            <div className=\"date-label\">Beginn:</div>\n                            {formatDate(start)}\n                            <hr />\n                            <div className=\"date-label\">Ende:</div>\n                            {formatDate(end)}\n                        </>\n                    )}\n                    {desc && <hr />}\n                    {desc}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { useMemo } from 'react';\nimport { CalendarEvent, Store } from '../../store';\n\nconst selectEvent = (selectedEvent: CalendarEvent) => Store.set({ selectedEvent });\n\nconst ONE_DAY = 86400000; // 24 * 60 * 60 * 1000\n\nconst calculateDates = (year: number, month: number): Date[] => {\n    const firstOfMonth = new Date(year, month, 1);\n    const offsetLeft = (firstOfMonth.getDay() + 6) % 7;\n    const result = new Array(offsetLeft)\n        .fill(undefined)\n        .map((_, index) => new Date(year, month, index - offsetLeft + 1));\n\n    for (let i = 1; i <= 31; i++) {\n        const next = new Date(year, month, i);\n        if (next.getMonth() === month) {\n            result.push(next);\n        } else {\n            break;\n        }\n    }\n\n    const offsetRight = 7 - result[result.length - 1].getDay();\n    return result.concat(\n        new Array(offsetRight).fill(undefined).map((_, index) => new Date(year, month + 1, index + 1))\n    );\n};\n\ntype EventClass = 'single' | 'begin' | 'middle' | 'end';\n\nconst _eventClass = (isStart: boolean, isEnd: boolean): EventClass => {\n    if (isStart) return isEnd ? 'single' : 'begin';\n    else return isEnd ? 'end' : 'middle';\n};\n\nconst _eventMargin = (eventClass: EventClass): number => {\n    if (eventClass === 'single') return 1;\n    else if (eventClass === 'middle') return 0.5;\n    else return 0.75;\n};\n\nexport type DisplayEvent = {\n    title?: string;\n    backgroundColor?: string;\n    zIndex?: number;\n    width: string;\n    select: () => void;\n    className: string;\n    row: number;\n};\nconst _getDisplayEvent = (\n    event: CalendarEvent,\n    date: Date,\n    isStart: boolean,\n    isEnd: boolean,\n    row: number\n): DisplayEvent => {\n    const titleSpace = Math.min(Math.ceil((+event.end - +date) / ONE_DAY), ((7 - date.getDay()) % 7) + 1);\n    const className = _eventClass(isStart, isEnd);\n    const width = `calc(${titleSpace * 100}% - ${_eventMargin(className)}em - ${titleSpace > 1 ? 0.5 : 0}em)`;\n    const showTitle = isStart || date.getDay() === 1;\n    const title = showTitle ? event.title : undefined;\n    const zIndex = showTitle ? 1 : undefined;\n    return { title, zIndex, select: () => selectEvent(event), width, className, row, backgroundColor: event.color };\n};\n\nexport type DisplayDate = { date: Date; events: DisplayEvent[] };\nconst calculateEvents = (dates: Date[], events: CalendarEvent[]): DisplayDate[] => {\n    const result: DisplayDate[] = dates.map((date) => ({ date, events: new Array(3).fill(undefined) }));\n    for (const event of events) {\n        const { start, end } = event;\n        const possibleStartIdx = dates.findIndex((date) => +start < +date + ONE_DAY && start > date);\n        const possibleEndIdx = dates.findIndex((date) => +end < +date + ONE_DAY && end > date);\n\n        const endIdx = possibleEndIdx < 0 && end > dates[dates.length - 1] ? dates.length - 1 : possibleEndIdx;\n        const startIdx = possibleStartIdx < 0 && start < dates[0] ? 0 : possibleStartIdx;\n\n        if (startIdx >= 0 && endIdx >= 0) {\n            const eventsForDate = result[startIdx].events;\n            const row = eventsForDate.findIndex((e) => e === undefined);\n            if (row >= 0) {\n                eventsForDate[row] = _getDisplayEvent(\n                    event,\n                    dates[startIdx],\n                    startIdx === possibleStartIdx,\n                    startIdx === possibleEndIdx,\n                    row\n                );\n                for (let i = startIdx + 1; i <= endIdx; i++) {\n                    result[i].events[row] = _getDisplayEvent(event, dates[i], false, i === possibleEndIdx, row);\n                }\n            }\n        }\n    }\n    return result;\n};\n\nexport const useDisplayDates = (year: number, month: number, events: CalendarEvent[]) =>\n    useMemo(() => calculateEvents(calculateDates(year, month), events), [year, month, events]);\n","import React from 'react';\nimport { DisplayEvent } from './useDisplayDates';\nimport { Util } from '../../util/util';\n\nexport type DisplayEventViewProps = { event: DisplayEvent };\n\nexport const DisplayEventView: React.FC<DisplayEventViewProps> = ({ event }) => {\n    if (!event) return null;\n    const { title, zIndex, width, className, row, select, backgroundColor } = event;\n    return (\n        <div\n            onClick={select}\n            style={{ width, zIndex, backgroundColor }}\n            className={Util.classNames('event', 'event-' + row, className)}>\n            {title || <>&nbsp;</>}\n        </div>\n    );\n};\n","import React from 'react';\nimport { DisplayDate } from './useDisplayDates';\nimport { Util } from '../../util/util';\nimport { DisplayEventView } from './DisplayEventView';\n\nexport type DisplayDateViewProps = { date: DisplayDate; month: number; now: Date };\n\nexport const DisplayDateView: React.FC<DisplayDateViewProps> = ({ date: { date, events }, month, now }) => (\n    <div\n        className={Util.classNames(\n            'date',\n            date.getMonth() !== month && 'inactive',\n            +date === +now && 'current',\n            date.getDay() === 1 && 'monday'\n        )}>\n        <span className=\"value\">{date.getDate()}</span>\n        {events.map((event, index: number) => (\n            <DisplayEventView event={event} key={index} />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { IconChevronLeft, IconChevronRight } from '../icons/icon';\nimport { CalendarEvent } from '../../store';\nimport { useMonthAndYear } from './useMonthAndYear';\nimport { useDisplayDates } from './useDisplayDates';\nimport { DisplayDateView } from './DisplayDateView';\n\nconst MONTH_NAMES = [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n];\nconst WEEKDAY_NAMES = ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So'];\n\nconst _NOW = new Date();\nconst NOW = new Date(_NOW.getFullYear(), _NOW.getMonth(), _NOW.getDate());\n\nexport const Calendar: React.FC<{ events: CalendarEvent[] }> = ({ events }) => {\n    const [{ month, year }, prevMonth, nextMonth] = useMonthAndYear(NOW);\n    const dates = useDisplayDates(year, month, events);\n\n    return (\n        <div className=\"calendar\">\n            <div className=\"month\">\n                <span onClick={prevMonth} className=\"arrow\">\n                    <IconChevronLeft />\n                </span>\n                <span className=\"value\">\n                    {MONTH_NAMES[month]} {year}\n                </span>\n                <span onClick={nextMonth} className=\"arrow\">\n                    <IconChevronRight />\n                </span>\n            </div>\n            <div className=\"grid\">\n                {WEEKDAY_NAMES.map((weekday) => (\n                    <div key={weekday} className=\"weekday\">\n                        {weekday}\n                    </div>\n                ))}\n                {dates.map((date) => (\n                    <DisplayDateView date={date} month={month} now={NOW} key={+date.date} />\n                ))}\n            </div>\n        </div>\n    );\n};\n","import { useCallback, useState } from 'react';\n\nexport type MonthAndYear = { month: number; year: number };\n\nexport const useMonthAndYear = (now: Date): [MonthAndYear, () => void, () => void] => {\n    const [monthAndYear, setMonthAndYear] = useState<MonthAndYear>(() => ({\n        month: now.getMonth(),\n        year: now.getFullYear(),\n    }));\n\n    const prevMonth = useCallback(\n        () =>\n            setMonthAndYear(({ month, year }) => ({\n                month: month === 0 ? 11 : month - 1,\n                year: month === 0 ? year - 1 : year,\n            })),\n        []\n    );\n    const nextMonth = useCallback(\n        () =>\n            setMonthAndYear(({ month, year }) => ({\n                month: month === 11 ? 0 : month + 1,\n                year: month === 11 ? year + 1 : year,\n            })),\n        []\n    );\n\n    return [monthAndYear, prevMonth, nextMonth];\n};\n","import React from 'react';\nimport { useSub } from '../store';\nimport { SelectedEvent } from './SelectedEvent';\nimport { Calendar } from './calendar/Calendar';\n\nexport const CalendarPage = () => {\n    const { selectedEvent, events } = useSub(({ selectedEvent, events }) => ({ selectedEvent, events }));\n    return (\n        <div className=\"calendar-page\">\n            <h1>Termine</h1>\n            <Calendar events={events} />\n            {selectedEvent && <SelectedEvent selectedEvent={selectedEvent} />}\n        </div>\n    );\n};\n","export const Students = 'Dyana,Yoan,Hadia,Wiam,Rehab,Aurel,Jaimie,Mohammad II,Anna,Beyza,Ivan,Kenai,Yusuf,Sabit,Mohammad,Majd,Myron,Irene,Yassin,Hossein,Deswill,Lennart,Jaden,Lisa'.split(\n    ','\n);\n","import React from 'react';\nimport { Students } from '../data/students';\n\nconst NOW = Date.now();\nconst COUNT_FIX = 16;\n\n// 1000 * 60 * 60 * 24 = 86400000 (milliseconds of a day)\nconst countOfAllMondays = Math.floor(((NOW - Date.UTC(2019, 0, 1)) / 86400000 + 1) / 7);\n\nconst mondaysToIgnore = [\n    Date.UTC(2019, 9, 7),\n    Date.UTC(2019, 9, 14),\n    Date.UTC(2019, 11, 23),\n    Date.UTC(2019, 11, 30),\n    Date.UTC(2020, 2, 2),\n    Date.UTC(2020, 2, 9),\n    Date.UTC(2020, 4, 18),\n];\n\nconst countOfIgnoredInPast = mondaysToIgnore.filter((timestamp) => timestamp <= NOW).length;\n\nconst mondaysCount = countOfAllMondays - countOfIgnoredInPast;\n\nconst Duties = 'Blumen gießen,Tafel wischen,Zettel austeilen,Müll wegbringen,Licht ausschalten,Fenster schließen,Fegen,Reserve'.split(\n    ','\n);\nconst DutyImages = 'plant,board,share,trash,light,window,sweep,reserve'.split(',');\ntype DutyProps = { duty: string; image: string; alt: string; students: string[] };\n\nconst modulo = (num: number, base: number) => ((num % base) + base) % base;\n\nconst DutiesAndStudents = Duties.map<DutyProps>((duty, index) => {\n    const studentIndex = (pos: number) => modulo(-2 * mondaysCount + 2 * index + COUNT_FIX + pos, Students.length);\n    const imageName = DutyImages[index];\n    return {\n        duty,\n        image: `/${imageName}.jpg`,\n        alt: duty,\n        students: [Students[studentIndex(0)], Students[studentIndex(1)]],\n    };\n});\n\nconst Duty = ({ duty, image, alt, students }: DutyProps) => (\n    <div className=\"duty\">\n        <div className=\"duty-title\">{duty}</div>\n        <div className=\"duty-image\">\n            <img src={image} alt={alt} />\n        </div>\n        {students.map((student, index) => (\n            <div className=\"student\" key={index}>\n                {student}\n            </div>\n        ))}\n        <hr />\n    </div>\n);\n\nexport const DutiesPage = () => (\n    <div className=\"duties\">\n        {DutiesAndStudents.map((duty, index) => (\n            <Duty key={index} {...duty} />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { Review } from '../store';\n\nexport type ReviewRowProps = { review: Review };\n\nexport const ReviewRow = ({ review: { name, crowns, warnings, evils, necessary, rewards } }: ReviewRowProps) => (\n    <tr className={necessary ? 'evil' : undefined}>\n        <td>{name}</td>\n        <td>\n            {crowns}\n            {rewards ? <span className=\"rewards\">{rewards}</span> : null}\n        </td>\n        <td>{warnings}</td>\n        <td>{evils}</td>\n        <td>{necessary || ''}</td>\n    </tr>\n);\n","import React from 'react';\nimport { useSub } from '../store';\nimport { ReviewRow } from './ReviewRow';\n\nexport const ReviewPage = () => {\n    const {\n        reviewsData: { version, reviews, since },\n    } = useSub(({ reviewsData }) => ({ reviewsData }));\n    return (\n        <div className=\"reviews\">\n            <h1>Kronenliste</h1>\n            <table className=\"pure-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>\n                            <span role=\"img\" aria-label=\"Kronen\">\n                                👑\n                            </span>\n                        </th>\n                        <th>\n                            <span role=\"img\" aria-label=\"Gelbe Karten\">\n                                😩\n                            </span>\n                        </th>\n                        <th>\n                            <span role=\"img\" aria-label=\"Rote Karte\">\n                                😡\n                            </span>\n                        </th>\n                        <th>\n                            <span role=\"img\" aria-label=\"Fehlende Kronen\">\n                                🚫\n                            </span>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {reviews.map((review) => (\n                        <ReviewRow key={review.name} review={review} />\n                    ))}\n                </tbody>\n            </table>\n            Die Liste wird geführt seit: {since}\n            <br />\n            Aktualisiert am: {version}\n            <ul>\n                <li>\n                    <span role=\"img\" aria-label=\"Kronen\">\n                        👑\n                    </span>{' '}\n                    - Anzahl der Kronen\n                </li>\n                <li>\n                    <span role=\"img\" aria-label=\"Gelbe Karten\">\n                        😩\n                    </span>{' '}\n                    - Anzahl der gelben Karten\n                </li>\n                <li>\n                    <span role=\"img\" aria-label=\"Rote Karte\">\n                        😡\n                    </span>{' '}\n                    - Anzahl der roten Karten\n                </li>\n                <li>\n                    <span role=\"img\" aria-label=\"Fehlende Kronen\">\n                        🚫\n                    </span>{' '}\n                    - Anzahl der noch fehlenden Kronen\n                </li>\n            </ul>\n        </div>\n    );\n};\n","import React from 'react';\nimport { useSub, NavigationState } from '../store';\nimport { CalendarPage } from './CalendarPage';\nimport { DutiesPage } from './DutiesPage';\nimport { ReviewPage } from './ReviewPage';\nimport { DetentionsPage } from './DetentionsPage';\n\nexport const Content = () => {\n    const { navigation } = useSub(({ navigation }) => ({ navigation }));\n\n    if (navigation === NavigationState.DUTIES) return <DutiesPage />;\n    if (navigation === NavigationState.REVIEW) return <ReviewPage />;\n    if (navigation === NavigationState.DETENTIONS) return <DetentionsPage />;\n\n    return <CalendarPage />;\n};\n","import { NavigationState, Store } from '../store';\nimport { Persistore } from 'persistore';\n\nconst NAV_KEY = 'navigation';\n\nconst _set = (navigation: NavigationState): void => {\n    Persistore.set(NAV_KEY, navigation);\n    Store.set({ navigation });\n};\n\nconst navigateTo = (navigation: NavigationState) => () => _set(navigation);\n\nconst _get = (): NavigationState => {\n    const current = Persistore.get(NAV_KEY);\n    return Object.values(NavigationState).find((n) => n === current) || NavigationState.CALENDAR;\n};\n\nStore.set({ navigation: _get() });\n\nexport const NavigationStore = { navigateTo };\n","import React, { useMemo } from 'react';\nimport { NavigationState, useSub } from '../store';\nimport { NavigationStore } from '../util/navigation-store';\n\ntype NavigationButton = { type: NavigationState; label: string };\nconst NavigationButtons: ReadonlyArray<NavigationButton> = [\n    { type: NavigationState.CALENDAR, label: 'Termine' },\n    { type: NavigationState.DUTIES, label: 'Ämter' },\n    { type: NavigationState.REVIEW, label: 'Kronen' },\n    { type: NavigationState.DETENTIONS, label: 'Verspätung' },\n];\n\nexport const Header = () => {\n    const { navigation } = useSub(({ navigation }) => ({ navigation }));\n\n    const buttons = useMemo(\n        () =>\n            NavigationButtons.filter((button) => button.type !== navigation).map((btn) => (\n                <button onClick={NavigationStore.navigateTo(btn.type)} key={btn.type}>\n                    {btn.label}\n                </button>\n            )),\n        [navigation]\n    );\n    return (\n        <header className=\"App-header\">\n            <img src=\"/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n            <div className=\"navigation\">{buttons}</div>\n        </header>\n    );\n};\n","import React from 'react';\nimport { Content } from './components/Content';\nimport { Header } from './components/Header';\nimport { useSub } from './store';\n\nexport const App = () => {\n    const accessGranted = useSub(({ accessGranted }) => accessGranted);\n\n    if (!accessGranted) return null;\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"App-content\">\n                <Content />\n            </div>\n        </div>\n    );\n};\n","import './assets/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// import { App } from './App';\nimport { Globals } from './globals';\nimport { ServiceWorkerUpdater } from './sw-logic';\nimport { loadCalendarEvents } from './util/load-calendar-events';\nimport { loadReviews } from './util/load-reviews';\nimport { LoginPage } from './components/LoginPage';\nimport { App } from './App';\n\nconst root = Globals.document().getElementById('root');\nReactDOM.render(\n    <>\n        <LoginPage />\n        <App />\n        <ServiceWorkerUpdater />\n    </>,\n    root\n);\n\nloadCalendarEvents();\nloadReviews();\n","import { Store } from '../store';\n\nexport const loadReviews = () =>\n    fetch('/reviews.json', { headers: { 'cache-control': 'no-cache', pragma: 'no-cache' } })\n        .then((r) => r.json())\n        .then(({ reviews, version, since }) => {\n            const parsedVersion = version || 'konnte nicht geladen werden';\n            const parsedSince = since || 'konnte nicht geladen werden';\n            Store.set({ reviewsData: { version: parsedVersion, reviews, since: parsedSince } });\n        })\n        .catch(() => {});\n"],"sourceRoot":""}