{"version":3,"sources":["store.ts","components/DetentionsPage.tsx","util/util.ts","components/icons/icon.tsx","components/SelectedEvent.tsx","components/calendar/useDisplayDates.ts","components/calendar/DisplayEventView.tsx","components/calendar/DisplayDateView.tsx","components/calendar/Calendar.tsx","components/calendar/useMonthAndYear.ts","util/load-calendar-events.ts","components/CalendarPage.tsx","data/students.ts","components/DutiesPage.tsx","components/ReviewRow.tsx","components/ReviewPage.tsx","util/load-reviews.ts","util/load-detentions.ts","components/Content.tsx","util/navigation-store.ts","components/Header.tsx","App.tsx","globals.ts","sw-logic.tsx","components/LoginPage.tsx","index.tsx"],"names":["NavigationState","ProgressColor","createStore","navigation","CALENDAR","events","reviewsData","version","reviews","since","detentionsData","detentions","selectedEvent","accessGranted","useSub","Store","Util","classes","filter","clazz","Boolean","join","_Icon","symbol","props","width","className","viewBox","fill","d","Icons","IconCalendarDay","IconChevronRight","IconChevronLeft","IconTimes","IconUndo","WEEKDAY_NAMES","_withLeadingZero","num","slice","formatDate","date","getDay","getDate","getMonth","getFullYear","hours","getUTCHours","minutes","getMinutes","formatTime","clearSelectedEvent","set","SelectedEvent","title","start","end","desc","onClick","ONE_DAY","_getDisplayEvent","event","isStart","isEnd","row","eventClass","titleSpace","Math","min","ceil","_eventClass","showTitle","undefined","zIndex","select","backgroundColor","color","useDisplayDates","year","month","useMemo","dates","result","map","Array","possibleStartIdx","findIndex","possibleEndIdx","endIdx","length","startIdx","eventsForDate","e","i","calculateEvents","offsetLeft","Date","_","index","next","push","offsetRight","concat","calculateDates","DisplayEventView","style","DisplayDateView","now","MONTH_NAMES","_NOW","NOW","Calendar","useState","monthAndYear","setMonthAndYear","useCallback","useMonthAndYear","prevMonth","nextMonth","weekday","parseDate","value","matchWithTime","match","matchWithoutTime","usedMatch","Number","day","hour","minute","parsed","UTC","parseEvent","startDate","endDate","CalendarPage","useEffect","fetch","headers","pragma","then","r","json","parsedEvents","catch","console","error","Students","split","mondaysCount","floor","timestamp","Duties","DutyImages","DutiesAndStudents","duty","studentIndex","pos","base","imageName","image","alt","students","Duty","src","student","DutiesPage","ReviewRow","review","name","crowns","warnings","evils","necessary","rewards","ReviewPage","parsedVersion","parsedSince","role","calculateProgressColor","GOOD","WARN","BAD","calculateWidth","calculateWidthPercent","DetentionsPage","parsedDetentions","isArray","finished","Content","DUTIES","REVIEW","DETENTIONS","NAV_KEY","current","Persistore","get","Object","values","find","n","_get","NavigationStore","_set","NavigationButtons","type","label","Header","buttons","button","btn","App","Globals","window","document","navigator","onLine","reloadPage","open","location","href","newSWInstalledCb","registerServiceWorker","serviceWorker","register","reg","onupdatefound","installingWorker","installing","activeWorker","active","onstatechange","state","doAfter","ms","cb","Promise","resolve","setTimeout","ServiceWorkerUpdater","content","setContent","contentDelayed","delay","initRefresh","all","addEventListener","expectedPw","digest","message","a","msgUint8","TextEncoder","encode","crypto","subtle","hashBuffer","hashArray","from","Uint8Array","b","toString","padStart","_KEY","grantAccess","LoginPage","hideLoginPage","setHideLoginPage","hideLogin","setHideLogin","submitFailed","setSubmitFailed","pw","setPw","key","access","onSubmit","preventDefault","count","onChange","target","root","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6990131f.chunk.js","sourcesContent":["import { createStore } from 'react-use-sub';\n\nexport type CalendarEvent = {\n    title: string;\n    start: Date;\n    end: Date;\n    desc?: string;\n    color?: string;\n};\n\nexport type Review = {\n    name: string;\n    crowns: number;\n    warnings: number;\n    evils: number;\n    necessary?: number;\n    rewards?: number;\n};\nexport type ReviewsData = {\n    reviews: ReadonlyArray<Review>;\n    version: string;\n    since: string;\n};\n\nexport type Detention = {\n    name: string;\n    min: number;\n    detentions: number;\n    finished: number;\n};\nexport type DetentionsData = {\n    detentions: ReadonlyArray<Detention>;\n    version: string;\n    since: string;\n};\n\nexport enum NavigationState {\n    CALENDAR = 'calendar',\n    DUTIES = 'duties',\n    REVIEW = 'review',\n    DETENTIONS = 'detentions',\n}\n\ntype State = {\n    navigation: NavigationState;\n    events: CalendarEvent[];\n    reviewsData: ReviewsData;\n    detentionsData: DetentionsData;\n    selectedEvent: CalendarEvent | null;\n    accessGranted: boolean;\n};\n\nconst [useSub, Store] = createStore<State>({\n    navigation: NavigationState.CALENDAR,\n    events: [],\n    reviewsData: { version: '', reviews: [], since: '' },\n    detentionsData: { version: '', detentions: [], since: '' },\n    selectedEvent: null,\n    accessGranted: false,\n});\n\nexport { useSub, Store };\n","import React, { useEffect } from 'react';\nimport { Util } from '../util/util';\nimport { useSub } from '../store';\nimport { loadDetentions } from '../util/load-detentions';\n\nenum ProgressColor {\n    GOOD = 'green',\n    WARN = 'orange',\n    BAD = 'red',\n}\n\nconst calculateProgressColor = (min: number): ProgressColor =>\n    min < 15 ? ProgressColor.GOOD : min < 30 ? ProgressColor.WARN : ProgressColor.BAD;\n\nconst calculateWidthPercent = (min: number): number => Math.min(100, min / 0.45);\nconst calculateWidth = (min: number): string => calculateWidthPercent(min) + '%';\n\nexport const DetentionsPage: React.FC = () => {\n    const { version, detentions, since } = useSub(({ detentionsData }) => detentionsData);\n\n    useEffect(() => {\n        if (!detentions.length) {\n            loadDetentions();\n        }\n    }, [detentions.length]);\n\n    return (\n        <div className=\"detentions\">\n            <h1>Verspätungen</h1>\n            {detentions.map(({ name, min, detentions, finished }) => (\n                <div className=\"detention\" key={name}>\n                    <div>{name}</div>\n                    <div className=\"detention__progress\">\n                        <div\n                            className=\"detention__progress--value\"\n                            style={{ width: calculateWidth(min), backgroundColor: calculateProgressColor(min) }}\n                        />\n                        <div className=\"detention__progress--desc\">{min} min</div>\n                    </div>\n                    {detentions > 0 && (\n                        <div className={Util.classNames('detention__statistic', detentions > finished && 'bad')}>\n                            {finished} / {detentions}\n                        </div>\n                    )}\n                </div>\n            ))}\n            <p>\n                Die Liste wird geführt seit: {since}\n                <br />\n                Aktualisiert am: {version}\n            </p>\n            <h3>Erklärung:</h3>\n            <p>\n                Sobald der Balken mit 45 min Verpätungszeit aufgefüllt ist, ist ein Nacharbeiten der Stunde\n                erforderlich. Die Zahlen am Ende der Reihe z.B. 1 / 2 bedeuten, dass 2 mal das Nacharbeiten der Stunde\n                erforderlich war und bereits 1 mal nachgeholt wurde.\n            </p>\n        </div>\n    );\n};\n","const classNames = (...classes: any[]): string => classes.filter((clazz?: string) => Boolean(clazz)).join(' ');\n\nconst array = (num: number): Array<void> => [...Array(num)];\n\nconst nextArray = <T>(before: T[], index: number, value: T): T[] => [\n    ...before.slice(0, index),\n    value,\n    ...before.slice(index + 1),\n];\n\nexport const Util = { array, classNames, nextArray };\n","import React from 'react';\nimport Icons from './icon-path.json';\nimport { Util } from '../../util/util';\n\ntype IconProps = { className?: string };\n\nconst _Icon = (symbol: keyof typeof Icons, props: IconProps = {}, width: number = 512) => (\n    <svg className={props.className ? props.className + ' icon' : 'icon'} viewBox={`0 0 ${width} 512`}>\n        <path fill=\"currentColor\" d={Icons[symbol]} />\n    </svg>\n);\n\nexport const IconCalendarDay: React.FC<IconProps> = (props: IconProps) => _Icon('CALENDAR_DAY', props, 448);\nexport const IconChevronRight: React.FC<IconProps> = (props: IconProps) => _Icon('CHEVRON_RIGHT', props, 320);\nexport const IconChevronLeft: React.FC<IconProps> = (props: IconProps) =>\n    _Icon('CHEVRON_RIGHT', { ...props, className: Util.classNames('reflect', props.className) }, 320);\nexport const IconTimes: React.FC<IconProps> = (props: IconProps) => _Icon('TIMES', props, 352);\nexport const IconUndo: React.FC<IconProps> = (props: IconProps) => _Icon('UNDO', props);\n","import React from 'react';\nimport { CalendarEvent, Store } from '../store';\nimport { IconCalendarDay, IconTimes } from './icons/icon';\n\nconst WEEKDAY_NAMES = ['So', 'Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa'];\n\nconst _withLeadingZero = (num: number) => ('0' + num).slice(-2);\n\nconst formatTime = (date: Date): string => {\n    const hours = date.getUTCHours();\n    const minutes = date.getMinutes();\n    return hours || minutes ? ` um ${hours}:${_withLeadingZero(minutes)} Uhr` : '';\n};\nconst formatDate = (date: Date) =>\n    `${WEEKDAY_NAMES[date.getDay()]}, ${_withLeadingZero(date.getDate())}.${_withLeadingZero(\n        date.getMonth() + 1\n    )}.${date.getFullYear()}${formatTime(date)}`;\n\nconst clearSelectedEvent = () => Store.set({ selectedEvent: null });\n\nexport type SelectedEventProps = { selectedEvent: CalendarEvent };\n\nexport const SelectedEvent = ({ selectedEvent }: SelectedEventProps) => {\n    const { title, start, end, desc } = selectedEvent;\n\n    return (\n        <div className=\"selected-event\" onClick={clearSelectedEvent}>\n            <div className=\"close-btn\">\n                <IconTimes />\n            </div>\n            <div className=\"selected-event-container\">\n                <div className=\"description\">\n                    <span className=\"title\">{title}</span>\n                    <hr />\n                    {+start === +end ? (\n                        <>\n                            <IconCalendarDay /> {formatDate(start)}\n                        </>\n                    ) : (\n                        <>\n                            <div className=\"date-label\">Beginn:</div>\n                            {formatDate(start)}\n                            <hr />\n                            <div className=\"date-label\">Ende:</div>\n                            {formatDate(end)}\n                        </>\n                    )}\n                    {desc && <hr />}\n                    {desc}\n                </div>\n            </div>\n        </div>\n    );\n};\n","import { useMemo } from 'react';\nimport { CalendarEvent, Store } from '../../store';\n\nconst selectEvent = (selectedEvent: CalendarEvent) => Store.set({ selectedEvent });\n\nconst ONE_DAY = 86400000; // 24 * 60 * 60 * 1000\n\nconst calculateDates = (year: number, month: number): Date[] => {\n    const firstOfMonth = new Date(year, month, 1);\n    const offsetLeft = (firstOfMonth.getDay() + 6) % 7;\n    const result = new Array(offsetLeft)\n        .fill(undefined)\n        .map((_, index) => new Date(year, month, index - offsetLeft + 1));\n\n    for (let i = 1; i <= 31; i++) {\n        const next = new Date(year, month, i);\n        if (next.getMonth() === month) {\n            result.push(next);\n        } else {\n            break;\n        }\n    }\n\n    const offsetRight = 7 - result[result.length - 1].getDay();\n    return result.concat(\n        new Array(offsetRight).fill(undefined).map((_, index) => new Date(year, month + 1, index + 1))\n    );\n};\n\ntype EventClass = 'single' | 'begin' | 'middle' | 'end';\n\nconst _eventClass = (isStart: boolean, isEnd: boolean): EventClass => {\n    if (isStart) return isEnd ? 'single' : 'begin';\n    else return isEnd ? 'end' : 'middle';\n};\n\nconst _eventMargin = (eventClass: EventClass): number => {\n    if (eventClass === 'single') return 1;\n    else if (eventClass === 'middle') return 0.5;\n    else return 0.75;\n};\n\nexport type DisplayEvent = {\n    title?: string;\n    backgroundColor?: string;\n    zIndex?: number;\n    width: string;\n    select: () => void;\n    className: string;\n    row: number;\n};\nconst _getDisplayEvent = (\n    event: CalendarEvent,\n    date: Date,\n    isStart: boolean,\n    isEnd: boolean,\n    row: number\n): DisplayEvent => {\n    const titleSpace = Math.min(Math.ceil((+event.end - +date) / ONE_DAY), ((7 - date.getDay()) % 7) + 1);\n    const className = _eventClass(isStart, isEnd);\n    const width = `calc(${titleSpace * 100}% - ${_eventMargin(className)}em - ${titleSpace > 1 ? 0.5 : 0}em)`;\n    const showTitle = isStart || date.getDay() === 1;\n    const title = showTitle ? event.title : undefined;\n    const zIndex = showTitle ? 1 : undefined;\n    return { title, zIndex, select: () => selectEvent(event), width, className, row, backgroundColor: event.color };\n};\n\nexport type DisplayDate = { date: Date; events: DisplayEvent[] };\nconst calculateEvents = (dates: Date[], events: CalendarEvent[]): DisplayDate[] => {\n    const result: DisplayDate[] = dates.map((date) => ({ date, events: new Array(3).fill(undefined) }));\n    for (const event of events) {\n        const { start, end } = event;\n        const possibleStartIdx = dates.findIndex((date) => +start < +date + ONE_DAY && start > date);\n        const possibleEndIdx = dates.findIndex((date) => +end < +date + ONE_DAY && end > date);\n\n        const endIdx = possibleEndIdx < 0 && end > dates[dates.length - 1] ? dates.length - 1 : possibleEndIdx;\n        const startIdx = possibleStartIdx < 0 && start < dates[0] ? 0 : possibleStartIdx;\n\n        if (startIdx >= 0 && endIdx >= 0) {\n            const eventsForDate = result[startIdx].events;\n            const row = eventsForDate.findIndex((e) => e === undefined);\n            if (row >= 0) {\n                eventsForDate[row] = _getDisplayEvent(\n                    event,\n                    dates[startIdx],\n                    startIdx === possibleStartIdx,\n                    startIdx === possibleEndIdx,\n                    row\n                );\n                for (let i = startIdx + 1; i <= endIdx; i++) {\n                    result[i].events[row] = _getDisplayEvent(event, dates[i], false, i === possibleEndIdx, row);\n                }\n            }\n        }\n    }\n    return result;\n};\n\nexport const useDisplayDates = (year: number, month: number, events: CalendarEvent[]) =>\n    useMemo(() => calculateEvents(calculateDates(year, month), events), [year, month, events]);\n","import React from 'react';\nimport { DisplayEvent } from './useDisplayDates';\nimport { Util } from '../../util/util';\n\nexport type DisplayEventViewProps = { event: DisplayEvent };\n\nexport const DisplayEventView: React.FC<DisplayEventViewProps> = ({ event }) => {\n    if (!event) return null;\n    const { title, zIndex, width, className, row, select, backgroundColor } = event;\n    return (\n        <div\n            onClick={select}\n            style={{ width, zIndex, backgroundColor }}\n            className={Util.classNames('event', 'event-' + row, className)}>\n            {title || <>&nbsp;</>}\n        </div>\n    );\n};\n","import React from 'react';\nimport { DisplayDate } from './useDisplayDates';\nimport { Util } from '../../util/util';\nimport { DisplayEventView } from './DisplayEventView';\n\nexport type DisplayDateViewProps = { date: DisplayDate; month: number; now: Date };\n\nexport const DisplayDateView: React.FC<DisplayDateViewProps> = ({ date: { date, events }, month, now }) => (\n    <div\n        className={Util.classNames(\n            'date',\n            date.getMonth() !== month && 'inactive',\n            +date === +now && 'current',\n            date.getDay() === 1 && 'monday'\n        )}>\n        <span className=\"value\">{date.getDate()}</span>\n        {events.map((event, index: number) => (\n            <DisplayEventView event={event} key={index} />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { IconChevronLeft, IconChevronRight } from '../icons/icon';\nimport { CalendarEvent } from '../../store';\nimport { useMonthAndYear } from './useMonthAndYear';\nimport { useDisplayDates } from './useDisplayDates';\nimport { DisplayDateView } from './DisplayDateView';\n\nconst MONTH_NAMES = [\n    'Januar',\n    'Februar',\n    'März',\n    'April',\n    'Mai',\n    'Juni',\n    'Juli',\n    'August',\n    'September',\n    'Oktober',\n    'November',\n    'Dezember',\n];\nconst WEEKDAY_NAMES = ['Mo', 'Di', 'Mi', 'Do', 'Fr', 'Sa', 'So'];\n\nconst _NOW = new Date();\nconst NOW = new Date(_NOW.getFullYear(), _NOW.getMonth(), _NOW.getDate());\n\nexport const Calendar: React.FC<{ events: CalendarEvent[] }> = ({ events }) => {\n    const [{ month, year }, prevMonth, nextMonth] = useMonthAndYear(NOW);\n    const dates = useDisplayDates(year, month, events);\n\n    return (\n        <div className=\"calendar\">\n            <div className=\"month\">\n                <span onClick={prevMonth} className=\"arrow\">\n                    <IconChevronLeft />\n                </span>\n                <span className=\"value\">\n                    {MONTH_NAMES[month]} {year}\n                </span>\n                <span onClick={nextMonth} className=\"arrow\">\n                    <IconChevronRight />\n                </span>\n            </div>\n            <div className=\"grid\">\n                {WEEKDAY_NAMES.map((weekday) => (\n                    <div key={weekday} className=\"weekday\">\n                        {weekday}\n                    </div>\n                ))}\n                {dates.map((date) => (\n                    <DisplayDateView date={date} month={month} now={NOW} key={+date.date} />\n                ))}\n            </div>\n        </div>\n    );\n};\n","import { useCallback, useState } from 'react';\n\nexport type MonthAndYear = { month: number; year: number };\n\nexport const useMonthAndYear = (now: Date): [MonthAndYear, () => void, () => void] => {\n    const [monthAndYear, setMonthAndYear] = useState<MonthAndYear>(() => ({\n        month: now.getMonth(),\n        year: now.getFullYear(),\n    }));\n\n    const prevMonth = useCallback(\n        () =>\n            setMonthAndYear(({ month, year }) => ({\n                month: month === 0 ? 11 : month - 1,\n                year: month === 0 ? year - 1 : year,\n            })),\n        []\n    );\n    const nextMonth = useCallback(\n        () =>\n            setMonthAndYear(({ month, year }) => ({\n                month: month === 11 ? 0 : month + 1,\n                year: month === 11 ? year + 1 : year,\n            })),\n        []\n    );\n\n    return [monthAndYear, prevMonth, nextMonth];\n};\n","import { Store, CalendarEvent } from '../store';\n\nexport const parseDate = (value?: any): Date | void => {\n    if (value) {\n        const matchWithTime = value.match(/^([0-9]{2})\\.([0-9]{2})\\.([0-9]{4}) ([0-9]{1,2}):([0-9]{2})$/);\n        const matchWithoutTime = value.match(/^([0-9]{2})\\.([0-9]{2})\\.([0-9]{4})$/);\n\n        if (!matchWithTime && !matchWithoutTime) return;\n\n        const usedMatch = matchWithTime ? matchWithTime : [...matchWithoutTime, 0, 0];\n\n        // extract information\n        const year = Number(usedMatch[3]);\n        const month = Number(usedMatch[2]) - 1;\n        const day = Number(usedMatch[1]);\n        const hour = Number(usedMatch[4]);\n        const minute = Number(usedMatch[5]);\n        // parse it\n        const parsed = new Date(Date.UTC(year, month, day, hour, minute));\n        const dateIsValid = year === parsed.getFullYear() && month === parsed.getMonth();\n\n        if (!dateIsValid) return;\n\n        return parsed; // return valid date\n    }\n};\n\ntype CalendarEventFromJson = { title: string; start: string; end?: string; desc?: string; color?: string };\n\nconst parseEvent = ({ title, start, end, desc, color }: CalendarEventFromJson): CalendarEvent | void => {\n    const startDate = parseDate(start);\n    const endDate = end ? parseDate(end) : startDate;\n    return startDate && endDate ? { title, start: startDate, end: endDate, desc, color } : undefined;\n};\n\nexport const loadCalendarEvents = () =>\n    fetch('/events.json', { headers: { 'cache-control': 'no-cache', pragma: 'no-cache' } })\n        .then((r) => r.json())\n        .then(({ events }) => {\n            const parsedEvents = events.map(parseEvent).filter(Boolean);\n            Store.set({ events: parsedEvents });\n        })\n        // eslint-disable-next-line no-console\n        .catch(console.error);\n","import React, { useEffect } from 'react';\nimport { useSub } from '../store';\nimport { SelectedEvent } from './SelectedEvent';\nimport { Calendar } from './calendar/Calendar';\nimport { loadCalendarEvents } from '../util/load-calendar-events';\n\nexport const CalendarPage = () => {\n    const { selectedEvent, events } = useSub(({ selectedEvent, events }) => ({ selectedEvent, events }));\n\n    useEffect(() => {\n        if (!events.length) {\n            loadCalendarEvents();\n        }\n    }, [events.length]);\n\n    return (\n        <div className=\"calendar-page\">\n            <h1>Termine</h1>\n            <Calendar events={events} />\n            {selectedEvent && <SelectedEvent selectedEvent={selectedEvent} />}\n        </div>\n    );\n};\n","export const Students =\n    'Dyala,Yoan,Hadia,Wiam,Rehab,Aurel,Jaimie,Anna,Beyza,Ivan,Kenai,Yusuf,Sabit,Mohammad,Majd,Myron,Irene,Yassin,Hossein,Deswill,Lennart,Jaden,Lisa,Ajsa'.split(\n        ','\n    );\n","import React from 'react';\nimport { Students } from '../data/students';\n\nconst NOW = Date.now();\nconst COUNT_FIX = 16;\n\n// 1000 * 60 * 60 * 24 = 86400000 (milliseconds of a day)\nconst countOfAllMondays = Math.floor(((NOW - Date.UTC(2019, 0, 1)) / 86400000 + 1) / 7);\n\nconst mondaysToIgnore = [\n    Date.UTC(2019, 9, 7),\n    Date.UTC(2019, 9, 14),\n    Date.UTC(2019, 11, 23),\n    Date.UTC(2019, 11, 30),\n    Date.UTC(2020, 2, 2),\n    Date.UTC(2020, 2, 9),\n    Date.UTC(2020, 4, 18),\n];\n\nconst countOfIgnoredInPast = mondaysToIgnore.filter((timestamp) => timestamp <= NOW).length;\n\nconst mondaysCount = countOfAllMondays - countOfIgnoredInPast;\n\nconst Duties =\n    'Blumen gießen,Tafel wischen,Zettel austeilen,Müll wegbringen,Licht ausschalten,Fenster schließen,Fegen,Reserve'.split(\n        ','\n    );\nconst DutyImages = 'plant,board,share,trash,light,window,sweep,reserve'.split(',');\ntype DutyProps = { duty: string; image: string; alt: string; students: string[] };\n\nconst modulo = (num: number, base: number) => ((num % base) + base) % base;\n\nconst DutiesAndStudents = Duties.map<DutyProps>((duty, index) => {\n    const studentIndex = (pos: number) => modulo(-2 * mondaysCount + 2 * index + COUNT_FIX + pos, Students.length);\n    const imageName = DutyImages[index];\n    return {\n        duty,\n        image: `/${imageName}.jpg`,\n        alt: duty,\n        students: [Students[studentIndex(0)], Students[studentIndex(1)]],\n    };\n});\n\nconst Duty = ({ duty, image, alt, students }: DutyProps) => (\n    <div className=\"duty\">\n        <div className=\"duty-title\">{duty}</div>\n        <div className=\"duty-image\">\n            <img src={image} alt={alt} />\n        </div>\n        {students.map((student, index) => (\n            <div className=\"student\" key={index}>\n                {student}\n            </div>\n        ))}\n        <hr />\n    </div>\n);\n\nexport const DutiesPage = () => (\n    <div className=\"duties\">\n        {DutiesAndStudents.map((duty, index) => (\n            <Duty key={index} {...duty} />\n        ))}\n    </div>\n);\n","import React from 'react';\nimport { Review } from '../store';\n\nexport type ReviewRowProps = { review: Review };\n\nexport const ReviewRow = ({ review: { name, crowns, warnings, evils, necessary, rewards } }: ReviewRowProps) => (\n    <tr className={necessary ? 'evil' : undefined}>\n        <td>{name}</td>\n        <td>\n            {crowns}\n            {rewards ? <span className=\"rewards\">{rewards}</span> : null}\n        </td>\n        <td>{warnings}</td>\n        <td>{evils}</td>\n        <td>{necessary || ''}</td>\n    </tr>\n);\n","import React, { useEffect } from 'react';\nimport { useSub } from '../store';\nimport { ReviewRow } from './ReviewRow';\nimport { loadReviews } from '../util/load-reviews';\n\nexport const ReviewPage = () => {\n    const { version, reviews, since } = useSub(({ reviewsData }) => reviewsData);\n\n    useEffect(() => {\n        if (!reviews.length) {\n            loadReviews();\n        }\n    }, [reviews.length]);\n\n    return (\n        <div className=\"reviews\">\n            <h1>Kronenliste</h1>\n            <table className=\"pure-table\">\n                <thead>\n                    <tr>\n                        <th>Name</th>\n                        <th>\n                            <span role=\"img\" aria-label=\"Kronen\">\n                                👑\n                            </span>\n                        </th>\n                        <th>\n                            <span role=\"img\" aria-label=\"Gelbe Karten\">\n                                😩\n                            </span>\n                        </th>\n                        <th>\n                            <span role=\"img\" aria-label=\"Rote Karte\">\n                                😡\n                            </span>\n                        </th>\n                        <th>\n                            <span role=\"img\" aria-label=\"Fehlende Kronen\">\n                                🚫\n                            </span>\n                        </th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {reviews.map((review) => (\n                        <ReviewRow key={review.name} review={review} />\n                    ))}\n                </tbody>\n            </table>\n            Die Liste wird geführt seit: {since}\n            <br />\n            Aktualisiert am: {version}\n            <ul>\n                <li>\n                    <span role=\"img\" aria-label=\"Kronen\">\n                        👑\n                    </span>{' '}\n                    - Anzahl der Kronen\n                </li>\n                <li>\n                    <span role=\"img\" aria-label=\"Gelbe Karten\">\n                        😩\n                    </span>{' '}\n                    - Anzahl der gelben Karten\n                </li>\n                <li>\n                    <span role=\"img\" aria-label=\"Rote Karte\">\n                        😡\n                    </span>{' '}\n                    - Anzahl der roten Karten\n                </li>\n                <li>\n                    <span role=\"img\" aria-label=\"Fehlende Kronen\">\n                        🚫\n                    </span>{' '}\n                    - Anzahl der noch fehlenden Kronen\n                </li>\n            </ul>\n        </div>\n    );\n};\n","import { Store } from '../store';\n\nexport const loadReviews = () =>\n    fetch('/reviews.json', { headers: { 'cache-control': 'no-cache', pragma: 'no-cache' } })\n        .then((r) => r.json())\n        .then(({ reviews, version, since }) => {\n            const parsedVersion = version || 'konnte nicht geladen werden';\n            const parsedSince = since || 'konnte nicht geladen werden';\n            Store.set({ reviewsData: { version: parsedVersion, reviews, since: parsedSince } });\n        })\n        .catch(() => {});\n","import { Store } from '../store';\n\nexport const loadDetentions = () =>\n    fetch('/detentions.json', { headers: { 'cache-control': 'no-cache', pragma: 'no-cache' } })\n        .then((r) => r.json())\n        .then(({ detentions, version, since }) => {\n            const parsedVersion = version || 'konnte nicht geladen werden';\n            const parsedSince = since || 'konnte nicht geladen werden';\n            const parsedDetentions = Array.isArray(detentions)\n                ? detentions.map(({ name, min, detentions, finished }) => ({\n                      name,\n                      min: min || 0,\n                      detentions: detentions || 0,\n                      finished: finished || 0,\n                  }))\n                : [];\n            Store.set({ detentionsData: { version: parsedVersion, detentions: parsedDetentions, since: parsedSince } });\n        })\n        .catch(() => {});\n","import React from 'react';\nimport { useSub, NavigationState } from '../store';\nimport { CalendarPage } from './CalendarPage';\nimport { DutiesPage } from './DutiesPage';\nimport { ReviewPage } from './ReviewPage';\nimport { DetentionsPage } from './DetentionsPage';\n\nexport const Content = () => {\n    const { navigation } = useSub(({ navigation }) => ({ navigation }));\n\n    if (navigation === NavigationState.DUTIES) return <DutiesPage />;\n    if (navigation === NavigationState.REVIEW) return <ReviewPage />;\n    if (navigation === NavigationState.DETENTIONS) return <DetentionsPage />;\n\n    return <CalendarPage />;\n};\n","import { NavigationState, Store } from '../store';\nimport { Persistore } from 'persistore';\n\nconst NAV_KEY = 'navigation';\n\nconst _set = (navigation: NavigationState): void => {\n    Persistore.set(NAV_KEY, navigation);\n    Store.set({ navigation });\n};\n\nconst navigateTo = (navigation: NavigationState) => () => _set(navigation);\n\nconst _get = (): NavigationState => {\n    const current = Persistore.get(NAV_KEY);\n    return Object.values(NavigationState).find((n) => n === current) || NavigationState.CALENDAR;\n};\n\nStore.set({ navigation: _get() });\n\nexport const NavigationStore = { navigateTo };\n","import React, { useMemo } from 'react';\nimport { NavigationState, useSub } from '../store';\nimport { NavigationStore } from '../util/navigation-store';\n\ntype NavigationButton = { type: NavigationState; label: string };\nconst NavigationButtons: ReadonlyArray<NavigationButton> = [\n    { type: NavigationState.CALENDAR, label: 'Termine' },\n    { type: NavigationState.DUTIES, label: 'Ämter' },\n    { type: NavigationState.REVIEW, label: 'Kronen' },\n    { type: NavigationState.DETENTIONS, label: 'Verspätung' },\n];\n\nexport const Header = () => {\n    const { navigation } = useSub(({ navigation }) => ({ navigation }));\n\n    const buttons = useMemo(\n        () =>\n            NavigationButtons.filter((button) => button.type !== navigation).map((btn) => (\n                <button onClick={NavigationStore.navigateTo(btn.type)} key={btn.type}>\n                    {btn.label}\n                </button>\n            )),\n        [navigation]\n    );\n    return (\n        <header className=\"App-header\">\n            <img src=\"/logo.svg\" className=\"App-logo\" alt=\"logo\" />\n            <div className=\"navigation\">{buttons}</div>\n        </header>\n    );\n};\n","import React from 'react';\nimport { Content } from './components/Content';\nimport { Header } from './components/Header';\nimport { useSub } from './store';\n\nexport const App = () => {\n    const accessGranted = useSub(({ accessGranted }) => accessGranted);\n\n    if (!accessGranted) return null;\n    return (\n        <div className=\"App\">\n            <Header />\n            <div className=\"App-content\">\n                <Content />\n            </div>\n        </div>\n    );\n};\n","export const Globals = {\n    window: () => window,\n    document: () => document,\n    navigator: (): any => navigator,\n    onLine: (): boolean => !('onLine' in Globals.navigator()) || Globals.navigator().onLine,\n    timestamp: () => Date.now(),\n};\n","import React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { Globals } from './globals';\nimport { IconUndo } from './components/icons/icon';\n\nconst reloadPage = () => {\n    Globals.window().open(window.location.href, '_self');\n};\n\nlet newSWInstalledCb = () => {};\n\nconst registerServiceWorker = () =>\n    Globals.navigator()\n        .serviceWorker.register('/sw.js')\n        .then((reg: any /* ServiceWorkerRegistration */) => {\n            reg.onupdatefound = () => {\n                // reg.installing -> the installing worker, or undefined\n                // reg.waiting -> the waiting worker, or undefined\n                // reg.active -> the active worker, or undefined\n                const installingWorker = reg.installing;\n                const activeWorker = reg.active;\n                installingWorker.onstatechange = () => {\n                    // \"installing\" - the install event has fired, but not yet complete\n                    // \"installed\"  - install complete\n                    // \"activating\" - the activate event has fired, but not yet complete\n                    // \"activated\"  - fully active\n                    // \"redundant\"  - discarded. Either failed install, or it's been\n                    //                replaced by a newer version\n                    if (installingWorker.state === 'installed' && activeWorker) newSWInstalledCb();\n                };\n            };\n        })\n        .catch(() => Globals.window().console.error('service worker registration failed'));\n\nconst initServiceWorker = () => {\n    if (process.env.NODE_ENV !== 'development') {\n        'serviceWorker' in navigator && window.addEventListener('load', registerServiceWorker);\n    }\n};\n\nconst doAfter = (ms: number, cb: () => void): Promise<void> =>\n    new Promise((resolve) =>\n        Globals.window().setTimeout(() => {\n            cb();\n            resolve();\n        }, ms)\n    );\n\nexport const ServiceWorkerUpdater = () => {\n    const [content, setContent] = useState<ReactNode | void>();\n\n    const contentDelayed = useCallback(\n        (delay: number, content: ReactNode): Promise<void> => doAfter(delay, () => setContent(content)),\n        []\n    );\n\n    const initRefresh = useCallback(\n        () =>\n            Promise.all([\n                contentDelayed(0, 'Update gefunden'),\n                contentDelayed(1000, 'Update anwenden'),\n                contentDelayed(1300, 'Update anwenden.'),\n                contentDelayed(1600, 'Update anwenden..'),\n                contentDelayed(1900, 'Update anwenden...'),\n                contentDelayed(2200, <IconUndo />),\n                doAfter(2500, reloadPage),\n            ]),\n        [] // eslint-disable-line react-hooks/exhaustive-deps\n    );\n\n    useEffect(() => {\n        newSWInstalledCb = initRefresh;\n        initServiceWorker();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    if (!content) return null;\n\n    return (\n        <div className=\"sw-update\">\n            <div className=\"sw-update-overlay\" />\n            <div className=\"sw-update-content\">{content}</div>\n        </div>\n    );\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Util } from '../util/util';\nimport { Persistore } from 'persistore';\nimport { Store, useSub } from '../store';\nimport { IconChevronRight } from './icons/icon';\n\nconst expectedPw = '711c8940d4e7779c789cdfebb099aebc9d8bfc8345703a735a1e1e00714dd8fa';\n\nconst digest = async (message: string) => {\n    const msgUint8 = new TextEncoder().encode(message);\n    const hashBuffer = await crypto.subtle.digest('SHA-256', msgUint8);\n    const hashArray = Array.from(new Uint8Array(hashBuffer));\n    return hashArray.map((b) => b.toString(16).padStart(2, '0')).join('');\n};\n\nconst _KEY = digest(expectedPw);\n\nconst getAccess = (): Promise<boolean> => _KEY.then((key) => !!Persistore.get(key));\nconst grantAccess = () => Store.set({ accessGranted: true });\nconst saveAccess = () => _KEY.then((key) => Persistore.set(key, 'true')).then(grantAccess);\n\nconst ANIMATION_TIME = 3_000;\n\nexport const LoginPage: React.FC = () => {\n    const [hideLoginPage, setHideLoginPage] = useState(false);\n    const [hideLogin, setHideLogin] = useState(true);\n    const [submitFailed, setSubmitFailed] = useState(0);\n    const [pw, setPw] = useState('');\n    const accessGranted = useSub(({ accessGranted }) => accessGranted);\n\n    useEffect(() => {\n        getAccess().then((access) => {\n            if (access) grantAccess();\n            else setHideLogin(false);\n        });\n    }, []);\n\n    useEffect(() => {\n        if (accessGranted) setTimeout(() => setHideLoginPage(true), ANIMATION_TIME);\n    }, [accessGranted]);\n\n    const onSubmit = useCallback(\n        async (event) => {\n            event.preventDefault();\n            if ((await digest(pw)) === expectedPw) {\n                await saveAccess();\n                setSubmitFailed(0);\n            } else {\n                setSubmitFailed((count) => count + 1);\n            }\n        },\n        [pw]\n    );\n    const onChange = useCallback((event) => setPw(event.target.value), []);\n\n    if (hideLoginPage) return null;\n\n    return (\n        <div className={Util.classNames('login', accessGranted && 'login--open')}>\n            <div className=\"login__welcome-left\">\n                <div>Willko</div>\n                {hideLogin || <div className=\"small\">Password</div>}\n            </div>\n            <div className=\"login__welcome-right\">\n                <div>mmen</div>\n                {hideLogin || (\n                    <div className=\"small\">\n                        <form onSubmit={onSubmit}>\n                            <input\n                                key={submitFailed}\n                                className={Util.classNames(submitFailed && 'error')}\n                                type=\"password\"\n                                onChange={onChange}\n                                value={pw}\n                            />\n                            <button>\n                                <IconChevronRight />\n                            </button>\n                        </form>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import './assets/main.scss';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport { Globals } from './globals';\nimport { ServiceWorkerUpdater } from './sw-logic';\nimport { LoginPage } from './components/LoginPage';\n\nconst root = Globals.document().getElementById('root');\nReactDOM.render(\n    <>\n        <LoginPage />\n        <App />\n        <ServiceWorkerUpdater />\n    </>,\n    root\n);\n"],"sourceRoot":""}